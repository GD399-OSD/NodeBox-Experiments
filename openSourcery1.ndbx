<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="21" type="file" uuid="df2ed2f5-e083-44a9-a577-ac9abdea90fd">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <property name="canvasX" value="0"/>
    <property name="canvasY" value="0"/>
    <node name="root" prototype="core.network" renderedChild="colorize1">
        <node name="colorize1" position="6.00,4.00" prototype="corevector.colorize"/>
        <node name="combine1" position="6.00,2.00" prototype="list.combine"/>
        <node name="divide1" position="16.00,-4.00" prototype="math.divide">
            <port name="value2" type="float" value="10.0"/>
        </node>
        <node name="frame1" position="15.00,-5.00" prototype="core.frame"/>
        <node name="grid1" position="11.00,-3.00" prototype="corevector.grid">
            <port name="columns" type="int" value="5"/>
            <port name="rows" type="int" value="6"/>
            <port name="position" type="point" value="210.00,238.00"/>
        </node>
        <node name="hsb_color1" position="10.00,2.00" prototype="color.hsb_color"/>
        <node name="link1" position="6.00,0.00" prototype="corevector.link"/>
        <node name="multiply1" position="15.00,0.00" prototype="math.multiply">
            <port name="value2" type="float" value="2.0"/>
        </node>
        <node name="number1" position="6.00,-4.00" prototype="math.number">
            <port name="value" type="float" value="18.0"/>
        </node>
        <node name="rect1" position="10.00,-4.00" prototype="corevector.rect">
            <port name="width" type="float" value="30.0"/>
            <port name="height" type="float" value="30.0"/>
        </node>
        <node name="textpath1" position="2.00,-2.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Open Sourcery"/>
            <port name="font_name" type="string" value="Beon-Regular"/>
            <port name="font_size" type="float" value="96.0"/>
            <port name="align" type="string" value="RIGHT"/>
            <port name="position" type="point" value="5.00,0.00"/>
        </node>
        <node name="textpath2" position="5.00,-2.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Open Sourcery"/>
            <port name="font_name" type="string" value="Beon-Regular"/>
            <port name="font_size" type="float" value="96.0"/>
            <port name="align" type="string" value="RIGHT"/>
        </node>
        <node name="translate1" position="10.00,-2.00" prototype="corevector.translate"/>
        <node name="translate2" position="10.00,-1.00" prototype="corevector.translate">
            <port name="translate" type="point" value="337.00,406.00"/>
        </node>
        <node name="wave1" position="15.00,-1.00" prototype="math.wave">
            <port name="max" type="float" value="255.0"/>
        </node>
        <node name="wave2" position="18.00,-1.00" prototype="math.wave">
            <port name="max" type="float" value="255.0"/>
            <port name="period" type="float" value="90.0"/>
        </node>
        <node name="wave3" position="21.00,-1.00" prototype="math.wave">
            <port name="max" type="float" value="255.0"/>
        </node>
        <conn input="link1.shape1" output="textpath1"/>
        <conn input="translate1.translate" output="grid1"/>
        <conn input="translate1.shape" output="rect1"/>
        <conn input="translate2.shape" output="translate1"/>
        <conn input="link1.shape2" output="translate2"/>
        <conn input="combine1.list2" output="textpath2"/>
        <conn input="combine1.list1" output="link1"/>
        <conn input="textpath2.font_size" output="number1"/>
        <conn input="textpath1.font_size" output="number1"/>
        <conn input="colorize1.shape" output="combine1"/>
        <conn input="colorize1.fill" output="hsb_color1"/>
        <conn input="hsb_color1.hue" output="wave1"/>
        <conn input="divide1.value1" output="frame1"/>
        <conn input="wave1.offset" output="divide1"/>
        <conn input="wave2.offset" output="divide1"/>
        <conn input="hsb_color1.saturation" output="wave2"/>
        <conn input="wave3.offset" output="divide1"/>
        <conn input="hsb_color1.brightness" output="wave3"/>
        <conn input="multiply1.value1" output="wave1"/>
        <conn input="grid1.height" output="multiply1"/>
        <conn input="grid1.width" output="multiply1"/>
    </node>
</ndbx>

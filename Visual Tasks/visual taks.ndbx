<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="21" type="file" uuid="1ba76a83-fa43-404b-9d89-624346de5833">
    <property name="canvasHeight" value="600"/>
    <property name="canvasWidth" value="600"/>
    <property name="canvasX" value="0"/>
    <property name="canvasY" value="0"/>
    <link href="python:convex_hull.py" rel="functions"/>
    <link href="python:make_curve.py" rel="functions"/>
    <link href="python:path_string.py" rel="functions"/>
    <node name="root" prototype="core.network" renderedChild="combine1">
        <node name="accordion1" position="66.00,9.00" prototype="core.network" renderedChild="point_on_path1">
            <node name="add2" position="22.00,5.00" prototype="math.add"/>
            <node name="compare2" position="29.00,-5.00" prototype="math.compare"/>
            <node name="count2" position="32.00,-2.00" prototype="list.count"/>
            <node name="limit2" position="22.00,6.00" prototype="core.network" renderedChild="switch2">
                <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                <node name="compare2" position="15.00,13.00" prototype="math.compare">
                    <port name="comparator" type="string" value="&gt;"/>
                </node>
                <node name="maxValue" position="15.00,9.00" prototype="math.number">
                    <port name="value" type="float" value="99.99"/>
                </node>
                <node name="number1" position="8.00,7.00" prototype="math.number">
                    <port name="value" type="float" value="457.0"/>
                </node>
                <node name="number2" position="9.00,9.00" prototype="math.number"/>
                <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="99.99" widget="float"/>
                <conn input="switch1.input1" output="number1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="switch1.index" output="compare1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="switch2.index" output="compare2"/>
                <conn input="compare2.value2" output="maxValue"/>
                <conn input="compare2.value1" output="switch1"/>
                <conn input="switch2.input2" output="maxValue"/>
                <conn input="switch2.input1" output="switch1"/>
            </node>
            <node name="limit3" position="22.00,1.00" prototype="core.network" renderedChild="switch2">
                <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                <node name="compare2" position="15.00,13.00" prototype="math.compare">
                    <port name="comparator" type="string" value="&gt;"/>
                </node>
                <node name="maxValue" position="15.00,9.00" prototype="math.number">
                    <port name="value" type="float" value="99.99"/>
                </node>
                <node name="number1" position="8.00,7.00" prototype="math.number">
                    <port name="value" type="float" value="457.0"/>
                </node>
                <node name="number2" position="9.00,9.00" prototype="math.number"/>
                <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="99.99" widget="float"/>
                <conn input="switch1.input1" output="number1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="switch1.index" output="compare1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="switch2.index" output="compare2"/>
                <conn input="compare2.value2" output="maxValue"/>
                <conn input="compare2.value1" output="switch1"/>
                <conn input="switch2.input2" output="maxValue"/>
                <conn input="switch2.input1" output="switch1"/>
            </node>
            <node name="lookup5" position="29.00,-2.00" prototype="data.lookup">
                <port name="key" type="string" value="bounds.height"/>
            </node>
            <node name="lookup6" position="22.00,-2.00" prototype="data.lookup"/>
            <node name="lookup7" position="29.00,-6.00" prototype="data.lookup">
                <port name="key" type="string" value="bounds.y"/>
            </node>
            <node name="lookup8" position="25.00,-2.00" prototype="data.lookup">
                <port name="key" type="string" value="y"/>
            </node>
            <node name="offsets2" position="29.00,1.00" prototype="core.network" renderedChild="combine4">
                <node name="add2" position="30.00,14.00" prototype="math.add">
                    <port name="value2" type="float" value="50.0"/>
                </node>
                <node name="combine1" position="15.00,36.00" prototype="list.combine"/>
                <node name="combine2" position="23.00,22.00" prototype="list.combine"/>
                <node name="combine4" position="15.00,44.00" prototype="list.combine"/>
                <node name="divide1" position="15.00,2.00" prototype="math.divide">
                    <port name="value1" type="float" value="100.0"/>
                </node>
                <node name="divide2" position="27.00,0.00" prototype="math.divide">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="even1" position="33.00,11.00" prototype="math.even"/>
                <node name="find_exp1" position="23.00,7.00" prototype="core.network" renderedChild="lookup2">
                    <node name="abs1" position="14.00,12.00" prototype="math.abs"/>
                    <node name="abs2" position="23.00,30.00" prototype="math.abs"/>
                    <node name="add1" position="16.00,20.00" prototype="math.add">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="add2" position="23.00,9.00" prototype="math.add">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="add3" position="19.00,22.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0E-4"/>
                    </node>
                    <node name="amount" position="35.00,1.00" prototype="math.number"/>
                    <node name="calc_sum" position="14.00,8.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="calc_sum1" position="30.00,27.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="even1" position="26.00,6.00" prototype="math.even"/>
                    <node name="first1" position="16.00,17.00" prototype="list.first"/>
                    <node name="first2" position="19.00,34.00" prototype="list.first"/>
                    <node name="last" position="33.00,1.00" prototype="math.number"/>
                    <node name="limit1" position="19.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="limit2" position="16.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="lookup1" position="16.00,18.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="lookup2" position="19.00,35.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="make_table1" position="16.00,15.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="make_table2" position="19.00,32.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="multiply1" position="23.00,8.00" prototype="math.multiply"/>
                    <node name="range1" position="17.00,6.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.0"/>
                        <port name="step" type="float" value="-0.1"/>
                    </node>
                    <node name="range2" position="19.00,25.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.001"/>
                    </node>
                    <node name="sort1" position="16.00,16.00" prototype="list.sort"/>
                    <node name="sort2" position="19.00,33.00" prototype="list.sort"/>
                    <node name="subtract1" position="14.00,11.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="subtract2" position="23.00,6.00" prototype="math.subtract">
                        <port name="value1" type="float" value="50.0"/>
                    </node>
                    <node name="subtract3" position="19.00,20.00" prototype="math.subtract">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="subtract4" position="23.00,29.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="total_points" position="30.00,1.00" prototype="math.number"/>
                    <port childReference="last.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="amount.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="total_points.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="calc_sum.value_1" output="total_points"/>
                    <conn input="calc_sum.value_2" output="last"/>
                    <conn input="calc_sum.value_3" output="amount"/>
                    <conn input="calc_sum.value1" output="range1"/>
                    <conn input="subtract1.value1" output="calc_sum"/>
                    <conn input="abs1.value" output="subtract1"/>
                    <conn input="make_table1.list1" output="abs1"/>
                    <conn input="make_table1.list2" output="range1"/>
                    <conn input="sort1.list" output="make_table1"/>
                    <conn input="first1.list" output="sort1"/>
                    <conn input="lookup1.list" output="first1"/>
                    <conn input="multiply1.value1" output="subtract2"/>
                    <conn input="add2.value1" output="multiply1"/>
                    <conn input="subtract2.value2" output="last"/>
                    <conn input="even1.value" output="total_points"/>
                    <conn input="multiply1.value2" output="even1"/>
                    <conn input="add1.value1" output="lookup1"/>
                    <conn input="subtract3.value1" output="lookup1"/>
                    <conn input="limit1.value" output="subtract3"/>
                    <conn input="limit2.value" output="add1"/>
                    <conn input="add3.value1" output="limit1"/>
                    <conn input="calc_sum1.value_1" output="total_points"/>
                    <conn input="calc_sum1.value_2" output="last"/>
                    <conn input="calc_sum1.value_3" output="amount"/>
                    <conn input="calc_sum1.value1" output="range2"/>
                    <conn input="subtract4.value1" output="calc_sum1"/>
                    <conn input="abs2.value" output="subtract4"/>
                    <conn input="make_table2.list1" output="abs2"/>
                    <conn input="make_table2.list2" output="range2"/>
                    <conn input="sort2.list" output="make_table2"/>
                    <conn input="first2.list" output="sort2"/>
                    <conn input="lookup2.list" output="first2"/>
                    <conn input="range2.start" output="limit2"/>
                    <conn input="range2.end" output="add3"/>
                    <conn input="subtract4.value2" output="add2"/>
                    <conn input="subtract1.value2" output="add2"/>
                </node>
                <node name="floor1" position="27.00,1.00" prototype="math.floor"/>
                <node name="last1" position="16.00,8.00" prototype="list.last"/>
                <node name="limit1" position="22.00,30.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="limit2" position="12.00,33.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="multiply1" position="30.00,13.00" prototype="math.multiply"/>
                <node name="multiply2" position="12.00,31.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.6"/>
                </node>
                <node comment="adjust sensitivity" name="multiply4" position="26.00,5.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.35"/>
                </node>
                <node name="multiply5" position="22.00,18.00" prototype="math.multiply"/>
                <node comment="reference positions" name="multiply6" position="15.00,6.00" prototype="math.multiply"/>
                <node name="negate1" position="12.00,34.00" prototype="math.negate"/>
                <node name="negate2" position="12.00,41.00" prototype="math.negate"/>
                <node name="null1" position="20.00,-4.00" prototype="corevector.null"/>
                <node name="number1" position="25.00,18.00" prototype="math.number"/>
                <node name="number2" position="15.00,39.00" prototype="math.number"/>
                <node name="odd1" position="20.00,39.00" prototype="math.odd"/>
                <node name="pow1" position="22.00,13.00" prototype="math.pow">
                    <port name="value1" type="float" value="0.977"/>
                </node>
                <node name="range1" position="22.00,4.00" prototype="math.range">
                    <port name="end" type="float" value="6.0"/>
                </node>
                <node name="rest1" position="22.00,25.00" prototype="list.rest"/>
                <node name="rest2" position="15.00,34.00" prototype="list.rest"/>
                <node name="reverse1" position="20.00,41.00" prototype="list.reverse"/>
                <node name="reverse2" position="22.00,20.00" prototype="list.reverse"/>
                <node comment="desired positions" name="reverse4" position="22.00,29.00" prototype="list.reverse"/>
                <node name="running_total1" position="22.00,24.00" prototype="math.running_total"/>
                <node name="subtract1" position="15.00,0.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="subtract2" position="30.00,11.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract3" position="30.00,27.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract4" position="26.00,13.00" prototype="math.subtract"/>
                <node name="subtract5" position="25.00,16.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node comment="offsets" name="subtract6" position="15.00,33.00" prototype="math.subtract"/>
                <node name="sum1" position="17.00,20.00" prototype="math.sum"/>
                <node name="switch1" position="16.00,41.00" prototype="list.switch"/>
                <port childReference="multiply4.value1" description="" label="" name="value1" range="value" type="float" value="0.0" widget="float"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="divide1.value2" output="subtract1"/>
                <conn input="floor1.value" output="divide2"/>
                <conn input="subtract5.value2" output="subtract4"/>
                <conn input="pow1.value2" output="range1"/>
                <conn input="multiply5.value2" output="subtract5"/>
                <conn input="odd1.value" output="null1"/>
                <conn input="subtract1.value1" output="null1"/>
                <conn input="divide2.value1" output="null1"/>
                <conn input="last1.list" output="multiply6"/>
                <conn input="subtract4.value1" output="last1"/>
                <conn input="multiply6.value1" output="divide1"/>
                <conn input="multiply6.value2" output="range1"/>
                <conn input="multiply5.value1" output="pow1"/>
                <conn input="running_total1.values" output="combine2"/>
                <conn input="rest1.list" output="running_total1"/>
                <conn input="switch1.index" output="odd1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="combine4.list3" output="switch1"/>
                <conn input="range1.end" output="floor1"/>
                <conn input="subtract4.value2" output="multiply4"/>
                <conn input="even1.value" output="null1"/>
                <conn input="subtract2.value2" output="last1"/>
                <conn input="multiply1.value1" output="subtract2"/>
                <conn input="multiply1.value2" output="even1"/>
                <conn input="add2.value1" output="multiply1"/>
                <conn input="subtract5.value1" output="add2"/>
                <conn input="subtract3.value1" output="add2"/>
                <conn input="sum1.values" output="multiply5"/>
                <conn input="subtract6.value1" output="multiply6"/>
                <conn input="combine4.list7" output="reverse1"/>
                <conn input="reverse4.list" output="subtract3"/>
                <conn input="subtract3.value2" output="rest1"/>
                <conn input="reverse2.list" output="multiply5"/>
                <conn input="combine2.list1" output="reverse2"/>
                <conn input="combine2.list7" output="number1"/>
                <conn input="combine4.list1" output="negate2"/>
                <conn input="limit1.value" output="reverse4"/>
                <conn input="subtract6.value2" output="limit1"/>
                <conn input="rest2.list" output="subtract6"/>
                <conn input="combine1.list7" output="rest2"/>
                <conn input="negate2.value" output="combine1"/>
                <conn input="reverse1.list" output="combine1"/>
                <conn input="negate1.value" output="limit2"/>
                <conn input="combine1.list1" output="negate1"/>
                <conn input="multiply2.value1" output="multiply4"/>
                <conn input="limit2.value" output="multiply2"/>
                <conn input="find_exp1.value_1" output="last1"/>
                <conn input="find_exp1.value_2" output="multiply4"/>
                <conn input="find_exp1.value_3" output="null1"/>
                <conn input="pow1.value1" output="find_exp1"/>
            </node>
            <node name="offsets3" position="25.00,1.00" prototype="core.network" renderedChild="combine4">
                <node name="add2" position="30.00,14.00" prototype="math.add">
                    <port name="value2" type="float" value="50.0"/>
                </node>
                <node name="combine2" position="22.00,20.00" prototype="list.combine"/>
                <node name="combine3" position="13.00,33.00" prototype="list.combine"/>
                <node name="combine4" position="13.00,39.00" prototype="list.combine"/>
                <node name="divide1" position="15.00,2.00" prototype="math.divide">
                    <port name="value1" type="float" value="100.0"/>
                </node>
                <node name="divide2" position="27.00,0.00" prototype="math.divide">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="even1" position="33.00,11.00" prototype="math.even"/>
                <node name="find_exp" position="24.00,7.00" prototype="core.network" renderedChild="lookup2">
                    <node name="abs1" position="14.00,12.00" prototype="math.abs"/>
                    <node name="abs2" position="23.00,30.00" prototype="math.abs"/>
                    <node name="add1" position="16.00,20.00" prototype="math.add">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="add2" position="23.00,9.00" prototype="math.add">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="add3" position="19.00,22.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0E-4"/>
                    </node>
                    <node name="amount" position="35.00,1.00" prototype="math.number"/>
                    <node name="calc_sum" position="14.00,8.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="calc_sum1" position="30.00,27.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="even1" position="26.00,6.00" prototype="math.even"/>
                    <node name="first1" position="16.00,17.00" prototype="list.first"/>
                    <node name="first2" position="19.00,34.00" prototype="list.first"/>
                    <node name="last" position="33.00,1.00" prototype="math.number"/>
                    <node name="limit1" position="19.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="limit2" position="16.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="lookup1" position="16.00,18.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="lookup2" position="19.00,35.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="make_table1" position="16.00,15.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="make_table2" position="19.00,32.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="multiply1" position="23.00,8.00" prototype="math.multiply"/>
                    <node name="range1" position="17.00,6.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.1"/>
                    </node>
                    <node name="range2" position="19.00,25.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.001"/>
                    </node>
                    <node name="sort1" position="16.00,16.00" prototype="list.sort"/>
                    <node name="sort2" position="19.00,33.00" prototype="list.sort"/>
                    <node name="subtract1" position="14.00,11.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="subtract2" position="23.00,6.00" prototype="math.subtract">
                        <port name="value1" type="float" value="50.0"/>
                    </node>
                    <node name="subtract3" position="19.00,20.00" prototype="math.subtract">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="subtract4" position="23.00,29.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="total_points" position="30.00,1.00" prototype="math.number"/>
                    <port childReference="last.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="amount.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="total_points.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="calc_sum.value_1" output="total_points"/>
                    <conn input="calc_sum.value_2" output="last"/>
                    <conn input="calc_sum.value_3" output="amount"/>
                    <conn input="calc_sum.value1" output="range1"/>
                    <conn input="subtract1.value1" output="calc_sum"/>
                    <conn input="abs1.value" output="subtract1"/>
                    <conn input="make_table1.list1" output="abs1"/>
                    <conn input="make_table1.list2" output="range1"/>
                    <conn input="sort1.list" output="make_table1"/>
                    <conn input="first1.list" output="sort1"/>
                    <conn input="lookup1.list" output="first1"/>
                    <conn input="multiply1.value1" output="subtract2"/>
                    <conn input="add2.value1" output="multiply1"/>
                    <conn input="subtract2.value2" output="last"/>
                    <conn input="even1.value" output="total_points"/>
                    <conn input="multiply1.value2" output="even1"/>
                    <conn input="add1.value1" output="lookup1"/>
                    <conn input="subtract3.value1" output="lookup1"/>
                    <conn input="limit1.value" output="subtract3"/>
                    <conn input="limit2.value" output="add1"/>
                    <conn input="add3.value1" output="limit1"/>
                    <conn input="calc_sum1.value_1" output="total_points"/>
                    <conn input="calc_sum1.value_2" output="last"/>
                    <conn input="calc_sum1.value_3" output="amount"/>
                    <conn input="calc_sum1.value1" output="range2"/>
                    <conn input="subtract4.value1" output="calc_sum1"/>
                    <conn input="abs2.value" output="subtract4"/>
                    <conn input="make_table2.list1" output="abs2"/>
                    <conn input="make_table2.list2" output="range2"/>
                    <conn input="sort2.list" output="make_table2"/>
                    <conn input="first2.list" output="sort2"/>
                    <conn input="lookup2.list" output="first2"/>
                    <conn input="range2.start" output="limit2"/>
                    <conn input="range2.end" output="add3"/>
                    <conn input="subtract4.value2" output="add2"/>
                    <conn input="subtract1.value2" output="add2"/>
                </node>
                <node name="floor1" position="27.00,1.00" prototype="math.floor"/>
                <node name="last1" position="16.00,8.00" prototype="list.last"/>
                <node name="limit1" position="22.00,26.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="limit2" position="15.00,31.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="multiply1" position="30.00,13.00" prototype="math.multiply"/>
                <node comment="adjust sensitivity" name="multiply4" position="27.00,5.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.2"/>
                </node>
                <node name="multiply5" position="22.00,18.00" prototype="math.multiply"/>
                <node comment="reference positions" name="multiply6" position="15.00,6.00" prototype="math.multiply"/>
                <node name="negate1" position="13.00,36.00" prototype="math.negate"/>
                <node name="null1" position="20.00,-4.00" prototype="corevector.null"/>
                <node name="number1" position="25.00,18.00" prototype="math.number"/>
                <node name="number2" position="10.00,31.00" prototype="math.number"/>
                <node name="odd1" position="20.00,33.00" prototype="math.odd"/>
                <node name="pow1" position="22.00,13.00" prototype="math.pow">
                    <port name="value1" type="float" value="0.977"/>
                </node>
                <node name="range1" position="22.00,4.00" prototype="math.range">
                    <port name="end" type="float" value="6.0"/>
                </node>
                <node name="rest1" position="22.00,22.00" prototype="list.rest"/>
                <node name="rest2" position="15.00,30.00" prototype="list.rest"/>
                <node name="reverse1" position="19.00,36.00" prototype="list.reverse"/>
                <node comment="desired positions" name="reverse4" position="22.00,27.00" prototype="list.reverse"/>
                <node name="running_total1" position="22.00,21.00" prototype="math.running_total"/>
                <node name="subtract1" position="15.00,0.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="subtract2" position="30.00,11.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract3" position="30.00,24.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract4" position="26.00,13.00" prototype="math.subtract"/>
                <node name="subtract5" position="25.00,16.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node comment="offsets" name="subtract6" position="15.00,29.00" prototype="math.subtract"/>
                <node name="sum1" position="17.00,20.00" prototype="math.sum"/>
                <node name="switch1" position="16.00,36.00" prototype="list.switch"/>
                <port childReference="multiply4.value1" description="" label="" name="value1" range="value" type="float" value="0.0" widget="float"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="divide1.value2" output="subtract1"/>
                <conn input="floor1.value" output="divide2"/>
                <conn input="subtract5.value2" output="subtract4"/>
                <conn input="pow1.value2" output="range1"/>
                <conn input="multiply5.value2" output="subtract5"/>
                <conn input="odd1.value" output="null1"/>
                <conn input="subtract1.value1" output="null1"/>
                <conn input="divide2.value1" output="null1"/>
                <conn input="last1.list" output="multiply6"/>
                <conn input="subtract4.value1" output="last1"/>
                <conn input="multiply6.value1" output="divide1"/>
                <conn input="multiply6.value2" output="range1"/>
                <conn input="multiply5.value1" output="pow1"/>
                <conn input="running_total1.values" output="combine2"/>
                <conn input="combine2.list6" output="number1"/>
                <conn input="combine2.list1" output="multiply5"/>
                <conn input="rest1.list" output="running_total1"/>
                <conn input="subtract3.value2" output="rest1"/>
                <conn input="subtract6.value1" output="multiply6"/>
                <conn input="rest2.list" output="subtract6"/>
                <conn input="combine3.list1" output="number2"/>
                <conn input="negate1.value" output="combine3"/>
                <conn input="switch1.index" output="odd1"/>
                <conn input="combine4.list1" output="negate1"/>
                <conn input="reverse1.list" output="combine3"/>
                <conn input="combine4.list7" output="reverse1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="combine4.list3" output="switch1"/>
                <conn input="limit1.value" output="subtract3"/>
                <conn input="reverse4.list" output="limit1"/>
                <conn input="limit2.value" output="rest2"/>
                <conn input="combine3.list7" output="limit2"/>
                <conn input="range1.end" output="floor1"/>
                <conn input="subtract4.value2" output="multiply4"/>
                <conn input="even1.value" output="null1"/>
                <conn input="subtract2.value2" output="last1"/>
                <conn input="multiply1.value1" output="subtract2"/>
                <conn input="multiply1.value2" output="even1"/>
                <conn input="add2.value1" output="multiply1"/>
                <conn input="subtract6.value2" output="reverse4"/>
                <conn input="subtract5.value1" output="add2"/>
                <conn input="subtract3.value1" output="add2"/>
                <conn input="find_exp.value_1" output="last1"/>
                <conn input="find_exp.value_2" output="multiply4"/>
                <conn input="find_exp.value_3" output="null1"/>
                <conn input="pow1.value1" output="find_exp"/>
                <conn input="sum1.values" output="multiply5"/>
            </node>
            <node name="path" position="16.00,6.00" prototype="corevector.null"/>
            <node name="point2" position="22.00,-5.00" prototype="corevector.point"/>
            <node name="point_on_path1" position="18.00,11.00" prototype="corevector.point_on_path"/>
            <node name="quad_curve2" position="25.00,-8.00" prototype="corevector.quad_curve">
                <port name="point2" type="point" value="99.99,0.00"/>
                <port name="distance" type="float" value="0.0"/>
            </node>
            <node name="resample2" position="22.00,-6.00" prototype="corevector.resample">
                <port name="method" type="string" value="amount"/>
                <port name="length" type="float" value="1.0"/>
            </node>
            <node name="switch2" position="25.00,3.00" prototype="list.switch"/>
            <port childReference="resample2.points" description="The amount of output points." label="" min="2.0" name="number" range="value" type="int" value="10" widget="int"/>
            <port childReference="quad_curve2.distance" description="The offset of the curve from a straight line." label="" max="500.0" min="-500.0" name="distance" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="quad_curve2.t" description="The position of the off-curve point (0 - 100)." label="" name="tilt" range="value" type="float" value="50.0" widget="float"/>
            <port childReference="path.shape" description="The input shape." label="" name="path" range="value" type="geometry" widget="none"/>
            <conn input="resample2.shape" output="quad_curve2"/>
            <conn input="point2.value" output="resample2"/>
            <conn input="lookup8.list" output="point2"/>
            <conn input="lookup6.list" output="point2"/>
            <conn input="limit3.value" output="lookup6"/>
            <conn input="count2.list" output="point2"/>
            <conn input="add2.value1" output="limit3"/>
            <conn input="limit2.value" output="add2"/>
            <conn input="lookup5.list" output="quad_curve2"/>
            <conn input="offsets3.shape" output="count2"/>
            <conn input="offsets2.shape" output="count2"/>
            <conn input="lookup7.list" output="quad_curve2"/>
            <conn input="compare2.value1" output="lookup7"/>
            <conn input="switch2.index" output="compare2"/>
            <conn input="switch2.input2" output="offsets2"/>
            <conn input="switch2.input1" output="offsets3"/>
            <conn input="add2.value2" output="switch2"/>
            <conn input="offsets3.value1" output="lookup5"/>
            <conn input="offsets2.value1" output="lookup5"/>
            <conn input="point_on_path1.shape" output="path"/>
            <conn input="point_on_path1.t" output="limit2"/>
        </node>
        <node name="accordion2" position="69.00,9.00" prototype="core.network" renderedChild="point_on_path1">
            <node name="add2" position="22.00,5.00" prototype="math.add"/>
            <node name="compare2" position="29.00,-5.00" prototype="math.compare"/>
            <node name="count2" position="32.00,-2.00" prototype="list.count"/>
            <node name="limit2" position="22.00,6.00" prototype="core.network" renderedChild="switch2">
                <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                <node name="compare2" position="15.00,13.00" prototype="math.compare">
                    <port name="comparator" type="string" value="&gt;"/>
                </node>
                <node name="maxValue" position="15.00,9.00" prototype="math.number">
                    <port name="value" type="float" value="99.99"/>
                </node>
                <node name="number1" position="8.00,7.00" prototype="math.number">
                    <port name="value" type="float" value="457.0"/>
                </node>
                <node name="number2" position="9.00,9.00" prototype="math.number"/>
                <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="99.99" widget="float"/>
                <conn input="switch1.input1" output="number1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="switch1.index" output="compare1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="switch2.index" output="compare2"/>
                <conn input="compare2.value2" output="maxValue"/>
                <conn input="compare2.value1" output="switch1"/>
                <conn input="switch2.input2" output="maxValue"/>
                <conn input="switch2.input1" output="switch1"/>
            </node>
            <node name="limit3" position="22.00,1.00" prototype="core.network" renderedChild="switch2">
                <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                <node name="compare2" position="15.00,13.00" prototype="math.compare">
                    <port name="comparator" type="string" value="&gt;"/>
                </node>
                <node name="maxValue" position="15.00,9.00" prototype="math.number">
                    <port name="value" type="float" value="99.99"/>
                </node>
                <node name="number1" position="8.00,7.00" prototype="math.number">
                    <port name="value" type="float" value="457.0"/>
                </node>
                <node name="number2" position="9.00,9.00" prototype="math.number"/>
                <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="99.99" widget="float"/>
                <conn input="switch1.input1" output="number1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="switch1.index" output="compare1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="switch2.index" output="compare2"/>
                <conn input="compare2.value2" output="maxValue"/>
                <conn input="compare2.value1" output="switch1"/>
                <conn input="switch2.input2" output="maxValue"/>
                <conn input="switch2.input1" output="switch1"/>
            </node>
            <node name="lookup5" position="29.00,-2.00" prototype="data.lookup">
                <port name="key" type="string" value="bounds.height"/>
            </node>
            <node name="lookup6" position="22.00,-2.00" prototype="data.lookup"/>
            <node name="lookup7" position="29.00,-6.00" prototype="data.lookup">
                <port name="key" type="string" value="bounds.y"/>
            </node>
            <node name="lookup8" position="25.00,-2.00" prototype="data.lookup">
                <port name="key" type="string" value="y"/>
            </node>
            <node name="offsets2" position="29.00,1.00" prototype="core.network" renderedChild="combine4">
                <node name="add2" position="30.00,14.00" prototype="math.add">
                    <port name="value2" type="float" value="50.0"/>
                </node>
                <node name="combine1" position="15.00,36.00" prototype="list.combine"/>
                <node name="combine2" position="23.00,22.00" prototype="list.combine"/>
                <node name="combine4" position="15.00,44.00" prototype="list.combine"/>
                <node name="divide1" position="15.00,2.00" prototype="math.divide">
                    <port name="value1" type="float" value="100.0"/>
                </node>
                <node name="divide2" position="27.00,0.00" prototype="math.divide">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="even1" position="33.00,11.00" prototype="math.even"/>
                <node name="find_exp1" position="23.00,7.00" prototype="core.network" renderedChild="lookup2">
                    <node name="abs1" position="14.00,12.00" prototype="math.abs"/>
                    <node name="abs2" position="23.00,30.00" prototype="math.abs"/>
                    <node name="add1" position="16.00,20.00" prototype="math.add">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="add2" position="23.00,9.00" prototype="math.add">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="add3" position="19.00,22.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0E-4"/>
                    </node>
                    <node name="amount" position="35.00,1.00" prototype="math.number"/>
                    <node name="calc_sum" position="14.00,8.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="calc_sum1" position="30.00,27.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="even1" position="26.00,6.00" prototype="math.even"/>
                    <node name="first1" position="16.00,17.00" prototype="list.first"/>
                    <node name="first2" position="19.00,34.00" prototype="list.first"/>
                    <node name="last" position="33.00,1.00" prototype="math.number"/>
                    <node name="limit1" position="19.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="limit2" position="16.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="lookup1" position="16.00,18.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="lookup2" position="19.00,35.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="make_table1" position="16.00,15.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="make_table2" position="19.00,32.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="multiply1" position="23.00,8.00" prototype="math.multiply"/>
                    <node name="range1" position="17.00,6.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.0"/>
                        <port name="step" type="float" value="-0.1"/>
                    </node>
                    <node name="range2" position="19.00,25.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.001"/>
                    </node>
                    <node name="sort1" position="16.00,16.00" prototype="list.sort"/>
                    <node name="sort2" position="19.00,33.00" prototype="list.sort"/>
                    <node name="subtract1" position="14.00,11.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="subtract2" position="23.00,6.00" prototype="math.subtract">
                        <port name="value1" type="float" value="50.0"/>
                    </node>
                    <node name="subtract3" position="19.00,20.00" prototype="math.subtract">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="subtract4" position="23.00,29.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="total_points" position="30.00,1.00" prototype="math.number"/>
                    <port childReference="last.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="amount.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="total_points.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="calc_sum.value_1" output="total_points"/>
                    <conn input="calc_sum.value_2" output="last"/>
                    <conn input="calc_sum.value_3" output="amount"/>
                    <conn input="calc_sum.value1" output="range1"/>
                    <conn input="subtract1.value1" output="calc_sum"/>
                    <conn input="abs1.value" output="subtract1"/>
                    <conn input="make_table1.list1" output="abs1"/>
                    <conn input="make_table1.list2" output="range1"/>
                    <conn input="sort1.list" output="make_table1"/>
                    <conn input="first1.list" output="sort1"/>
                    <conn input="lookup1.list" output="first1"/>
                    <conn input="multiply1.value1" output="subtract2"/>
                    <conn input="add2.value1" output="multiply1"/>
                    <conn input="subtract2.value2" output="last"/>
                    <conn input="even1.value" output="total_points"/>
                    <conn input="multiply1.value2" output="even1"/>
                    <conn input="add1.value1" output="lookup1"/>
                    <conn input="subtract3.value1" output="lookup1"/>
                    <conn input="limit1.value" output="subtract3"/>
                    <conn input="limit2.value" output="add1"/>
                    <conn input="add3.value1" output="limit1"/>
                    <conn input="calc_sum1.value_1" output="total_points"/>
                    <conn input="calc_sum1.value_2" output="last"/>
                    <conn input="calc_sum1.value_3" output="amount"/>
                    <conn input="calc_sum1.value1" output="range2"/>
                    <conn input="subtract4.value1" output="calc_sum1"/>
                    <conn input="abs2.value" output="subtract4"/>
                    <conn input="make_table2.list1" output="abs2"/>
                    <conn input="make_table2.list2" output="range2"/>
                    <conn input="sort2.list" output="make_table2"/>
                    <conn input="first2.list" output="sort2"/>
                    <conn input="lookup2.list" output="first2"/>
                    <conn input="range2.start" output="limit2"/>
                    <conn input="range2.end" output="add3"/>
                    <conn input="subtract4.value2" output="add2"/>
                    <conn input="subtract1.value2" output="add2"/>
                </node>
                <node name="floor1" position="27.00,1.00" prototype="math.floor"/>
                <node name="last1" position="16.00,8.00" prototype="list.last"/>
                <node name="limit1" position="22.00,30.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="limit2" position="12.00,33.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="multiply1" position="30.00,13.00" prototype="math.multiply"/>
                <node name="multiply2" position="12.00,31.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.6"/>
                </node>
                <node comment="adjust sensitivity" name="multiply4" position="26.00,5.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.35"/>
                </node>
                <node name="multiply5" position="22.00,18.00" prototype="math.multiply"/>
                <node comment="reference positions" name="multiply6" position="15.00,6.00" prototype="math.multiply"/>
                <node name="negate1" position="12.00,34.00" prototype="math.negate"/>
                <node name="negate2" position="12.00,41.00" prototype="math.negate"/>
                <node name="null1" position="20.00,-4.00" prototype="corevector.null"/>
                <node name="number1" position="25.00,18.00" prototype="math.number"/>
                <node name="number2" position="15.00,39.00" prototype="math.number"/>
                <node name="odd1" position="20.00,39.00" prototype="math.odd"/>
                <node name="pow1" position="22.00,13.00" prototype="math.pow">
                    <port name="value1" type="float" value="0.977"/>
                </node>
                <node name="range1" position="22.00,4.00" prototype="math.range">
                    <port name="end" type="float" value="6.0"/>
                </node>
                <node name="rest1" position="22.00,25.00" prototype="list.rest"/>
                <node name="rest2" position="15.00,34.00" prototype="list.rest"/>
                <node name="reverse1" position="20.00,41.00" prototype="list.reverse"/>
                <node name="reverse2" position="22.00,20.00" prototype="list.reverse"/>
                <node comment="desired positions" name="reverse4" position="22.00,29.00" prototype="list.reverse"/>
                <node name="running_total1" position="22.00,24.00" prototype="math.running_total"/>
                <node name="subtract1" position="15.00,0.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="subtract2" position="30.00,11.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract3" position="30.00,27.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract4" position="26.00,13.00" prototype="math.subtract"/>
                <node name="subtract5" position="25.00,16.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node comment="offsets" name="subtract6" position="15.00,33.00" prototype="math.subtract"/>
                <node name="sum1" position="17.00,20.00" prototype="math.sum"/>
                <node name="switch1" position="16.00,41.00" prototype="list.switch"/>
                <port childReference="multiply4.value1" description="" label="" name="value1" range="value" type="float" value="0.0" widget="float"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="divide1.value2" output="subtract1"/>
                <conn input="floor1.value" output="divide2"/>
                <conn input="subtract5.value2" output="subtract4"/>
                <conn input="pow1.value2" output="range1"/>
                <conn input="multiply5.value2" output="subtract5"/>
                <conn input="odd1.value" output="null1"/>
                <conn input="subtract1.value1" output="null1"/>
                <conn input="divide2.value1" output="null1"/>
                <conn input="last1.list" output="multiply6"/>
                <conn input="subtract4.value1" output="last1"/>
                <conn input="multiply6.value1" output="divide1"/>
                <conn input="multiply6.value2" output="range1"/>
                <conn input="multiply5.value1" output="pow1"/>
                <conn input="running_total1.values" output="combine2"/>
                <conn input="rest1.list" output="running_total1"/>
                <conn input="switch1.index" output="odd1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="combine4.list3" output="switch1"/>
                <conn input="range1.end" output="floor1"/>
                <conn input="subtract4.value2" output="multiply4"/>
                <conn input="even1.value" output="null1"/>
                <conn input="subtract2.value2" output="last1"/>
                <conn input="multiply1.value1" output="subtract2"/>
                <conn input="multiply1.value2" output="even1"/>
                <conn input="add2.value1" output="multiply1"/>
                <conn input="subtract5.value1" output="add2"/>
                <conn input="subtract3.value1" output="add2"/>
                <conn input="sum1.values" output="multiply5"/>
                <conn input="subtract6.value1" output="multiply6"/>
                <conn input="combine4.list7" output="reverse1"/>
                <conn input="reverse4.list" output="subtract3"/>
                <conn input="subtract3.value2" output="rest1"/>
                <conn input="reverse2.list" output="multiply5"/>
                <conn input="combine2.list1" output="reverse2"/>
                <conn input="combine2.list7" output="number1"/>
                <conn input="combine4.list1" output="negate2"/>
                <conn input="limit1.value" output="reverse4"/>
                <conn input="subtract6.value2" output="limit1"/>
                <conn input="rest2.list" output="subtract6"/>
                <conn input="combine1.list7" output="rest2"/>
                <conn input="negate2.value" output="combine1"/>
                <conn input="reverse1.list" output="combine1"/>
                <conn input="negate1.value" output="limit2"/>
                <conn input="combine1.list1" output="negate1"/>
                <conn input="multiply2.value1" output="multiply4"/>
                <conn input="limit2.value" output="multiply2"/>
                <conn input="find_exp1.value_1" output="last1"/>
                <conn input="find_exp1.value_2" output="multiply4"/>
                <conn input="find_exp1.value_3" output="null1"/>
                <conn input="pow1.value1" output="find_exp1"/>
            </node>
            <node name="offsets3" position="25.00,1.00" prototype="core.network" renderedChild="combine4">
                <node name="add2" position="30.00,14.00" prototype="math.add">
                    <port name="value2" type="float" value="50.0"/>
                </node>
                <node name="combine2" position="22.00,20.00" prototype="list.combine"/>
                <node name="combine3" position="13.00,33.00" prototype="list.combine"/>
                <node name="combine4" position="13.00,39.00" prototype="list.combine"/>
                <node name="divide1" position="15.00,2.00" prototype="math.divide">
                    <port name="value1" type="float" value="100.0"/>
                </node>
                <node name="divide2" position="27.00,0.00" prototype="math.divide">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="even1" position="33.00,11.00" prototype="math.even"/>
                <node name="find_exp" position="24.00,7.00" prototype="core.network" renderedChild="lookup2">
                    <node name="abs1" position="14.00,12.00" prototype="math.abs"/>
                    <node name="abs2" position="23.00,30.00" prototype="math.abs"/>
                    <node name="add1" position="16.00,20.00" prototype="math.add">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="add2" position="23.00,9.00" prototype="math.add">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="add3" position="19.00,22.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0E-4"/>
                    </node>
                    <node name="amount" position="35.00,1.00" prototype="math.number"/>
                    <node name="calc_sum" position="14.00,8.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="calc_sum1" position="30.00,27.00" prototype="core.network" renderedChild="sum2">
                        <node name="add3" position="48.00,30.00" prototype="math.add">
                            <port name="value2" type="float" value="50.0"/>
                        </node>
                        <node name="amount1" position="50.00,16.00" prototype="math.number"/>
                        <node name="divide3" position="37.00,20.00" prototype="math.divide">
                            <port name="value2" type="float" value="2.0"/>
                        </node>
                        <node name="even2" position="48.00,25.00" prototype="math.even"/>
                        <node name="floor2" position="37.00,21.00" prototype="math.floor"/>
                        <node name="last1" position="45.00,16.00" prototype="math.number"/>
                        <node name="multiply2" position="48.00,29.00" prototype="math.multiply"/>
                        <node name="multiply7" position="42.00,34.00" prototype="math.multiply"/>
                        <node name="pow2" position="42.00,25.00" prototype="math.pow">
                            <port name="value1" type="float" value="0.977"/>
                        </node>
                        <node name="range2" position="38.00,23.00" prototype="math.range">
                            <port name="end" type="float" value="6.0"/>
                        </node>
                        <node name="subtract7" position="44.00,29.00" prototype="math.subtract"/>
                        <node name="subtract8" position="43.00,32.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="subtract9" position="45.00,27.00" prototype="math.subtract">
                            <port name="value1" type="float" value="50.0"/>
                        </node>
                        <node name="sum2" position="42.00,35.00" prototype="math.sum"/>
                        <node name="total_points1" position="41.00,16.00" prototype="math.number"/>
                        <port childReference="total_points1.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="last1.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="amount1.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                        <port childReference="pow2.value1" description="" label="" name="value1" range="value" type="float" value="0.977" widget="float"/>
                        <conn input="subtract8.value2" output="subtract7"/>
                        <conn input="multiply7.value2" output="subtract8"/>
                        <conn input="multiply7.value1" output="pow2"/>
                        <conn input="multiply2.value1" output="subtract9"/>
                        <conn input="add3.value1" output="multiply2"/>
                        <conn input="subtract8.value1" output="add3"/>
                        <conn input="sum2.values" output="multiply7"/>
                        <conn input="range2.end" output="floor2"/>
                        <conn input="pow2.value2" output="range2"/>
                        <conn input="floor2.value" output="divide3"/>
                        <conn input="multiply2.value2" output="even2"/>
                        <conn input="divide3.value1" output="total_points1"/>
                        <conn input="even2.value" output="total_points1"/>
                        <conn input="subtract7.value1" output="last1"/>
                        <conn input="subtract9.value2" output="last1"/>
                        <conn input="subtract7.value2" output="amount1"/>
                    </node>
                    <node name="even1" position="26.00,6.00" prototype="math.even"/>
                    <node name="first1" position="16.00,17.00" prototype="list.first"/>
                    <node name="first2" position="19.00,34.00" prototype="list.first"/>
                    <node name="last" position="33.00,1.00" prototype="math.number"/>
                    <node name="limit1" position="19.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="limit2" position="16.00,21.00" prototype="core.network" renderedChild="switch2">
                        <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                        <node name="compare2" position="15.00,13.00" prototype="math.compare">
                            <port name="comparator" type="string" value="&gt;"/>
                        </node>
                        <node name="maxValue" position="15.00,9.00" prototype="math.number">
                            <port name="value" type="float" value="1.0"/>
                        </node>
                        <node name="number1" position="8.00,7.00" prototype="math.number">
                            <port name="value" type="float" value="457.0"/>
                        </node>
                        <node name="number2" position="9.00,9.00" prototype="math.number"/>
                        <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                        <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                        <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                        <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="1.0" widget="float"/>
                        <conn input="switch1.input1" output="number1"/>
                        <conn input="compare1.value1" output="number1"/>
                        <conn input="switch1.index" output="compare1"/>
                        <conn input="switch1.input2" output="number2"/>
                        <conn input="switch2.index" output="compare2"/>
                        <conn input="compare2.value2" output="maxValue"/>
                        <conn input="compare2.value1" output="switch1"/>
                        <conn input="switch2.input2" output="maxValue"/>
                        <conn input="switch2.input1" output="switch1"/>
                    </node>
                    <node name="lookup1" position="16.00,18.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="lookup2" position="19.00,35.00" prototype="data.lookup">
                        <port name="key" type="string" value="exp"/>
                    </node>
                    <node name="make_table1" position="16.00,15.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="make_table2" position="19.00,32.00" prototype="data.make_table">
                        <port name="headers" type="string" value="delta,exp"/>
                    </node>
                    <node name="multiply1" position="23.00,8.00" prototype="math.multiply"/>
                    <node name="range1" position="17.00,6.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.1"/>
                    </node>
                    <node name="range2" position="19.00,25.00" prototype="math.range">
                        <port name="start" type="float" value="1.0"/>
                        <port name="end" type="float" value="0.01"/>
                        <port name="step" type="float" value="-0.001"/>
                    </node>
                    <node name="sort1" position="16.00,16.00" prototype="list.sort"/>
                    <node name="sort2" position="19.00,33.00" prototype="list.sort"/>
                    <node name="subtract1" position="14.00,11.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="subtract2" position="23.00,6.00" prototype="math.subtract">
                        <port name="value1" type="float" value="50.0"/>
                    </node>
                    <node name="subtract3" position="19.00,20.00" prototype="math.subtract">
                        <port name="value2" type="float" value="0.05"/>
                    </node>
                    <node name="subtract4" position="23.00,29.00" prototype="math.subtract">
                        <port name="value2" type="float" value="50.0"/>
                    </node>
                    <node name="total_points" position="30.00,1.00" prototype="math.number"/>
                    <port childReference="last.value" description="" label="" name="value_1" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="amount.value" description="" label="" name="value_2" range="value" type="float" value="0.0" widget="float"/>
                    <port childReference="total_points.value" description="" label="" name="value_3" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="calc_sum.value_1" output="total_points"/>
                    <conn input="calc_sum.value_2" output="last"/>
                    <conn input="calc_sum.value_3" output="amount"/>
                    <conn input="calc_sum.value1" output="range1"/>
                    <conn input="subtract1.value1" output="calc_sum"/>
                    <conn input="abs1.value" output="subtract1"/>
                    <conn input="make_table1.list1" output="abs1"/>
                    <conn input="make_table1.list2" output="range1"/>
                    <conn input="sort1.list" output="make_table1"/>
                    <conn input="first1.list" output="sort1"/>
                    <conn input="lookup1.list" output="first1"/>
                    <conn input="multiply1.value1" output="subtract2"/>
                    <conn input="add2.value1" output="multiply1"/>
                    <conn input="subtract2.value2" output="last"/>
                    <conn input="even1.value" output="total_points"/>
                    <conn input="multiply1.value2" output="even1"/>
                    <conn input="add1.value1" output="lookup1"/>
                    <conn input="subtract3.value1" output="lookup1"/>
                    <conn input="limit1.value" output="subtract3"/>
                    <conn input="limit2.value" output="add1"/>
                    <conn input="add3.value1" output="limit1"/>
                    <conn input="calc_sum1.value_1" output="total_points"/>
                    <conn input="calc_sum1.value_2" output="last"/>
                    <conn input="calc_sum1.value_3" output="amount"/>
                    <conn input="calc_sum1.value1" output="range2"/>
                    <conn input="subtract4.value1" output="calc_sum1"/>
                    <conn input="abs2.value" output="subtract4"/>
                    <conn input="make_table2.list1" output="abs2"/>
                    <conn input="make_table2.list2" output="range2"/>
                    <conn input="sort2.list" output="make_table2"/>
                    <conn input="first2.list" output="sort2"/>
                    <conn input="lookup2.list" output="first2"/>
                    <conn input="range2.start" output="limit2"/>
                    <conn input="range2.end" output="add3"/>
                    <conn input="subtract4.value2" output="add2"/>
                    <conn input="subtract1.value2" output="add2"/>
                </node>
                <node name="floor1" position="27.00,1.00" prototype="math.floor"/>
                <node name="last1" position="16.00,8.00" prototype="list.last"/>
                <node name="limit1" position="22.00,26.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="limit2" position="15.00,31.00" prototype="core.network" renderedChild="switch2">
                    <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
                    <node name="compare2" position="15.00,13.00" prototype="math.compare">
                        <port name="comparator" type="string" value="&gt;"/>
                    </node>
                    <node name="maxValue" position="15.00,9.00" prototype="math.number">
                        <port name="value" type="float" value="50.0"/>
                    </node>
                    <node name="number1" position="8.00,7.00" prototype="math.number">
                        <port name="value" type="float" value="457.0"/>
                    </node>
                    <node name="number2" position="9.00,9.00" prototype="math.number"/>
                    <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
                    <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
                    <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
                    <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="50.0" widget="float"/>
                    <conn input="switch1.input1" output="number1"/>
                    <conn input="compare1.value1" output="number1"/>
                    <conn input="switch1.index" output="compare1"/>
                    <conn input="switch1.input2" output="number2"/>
                    <conn input="switch2.index" output="compare2"/>
                    <conn input="compare2.value2" output="maxValue"/>
                    <conn input="compare2.value1" output="switch1"/>
                    <conn input="switch2.input2" output="maxValue"/>
                    <conn input="switch2.input1" output="switch1"/>
                </node>
                <node name="multiply1" position="30.00,13.00" prototype="math.multiply"/>
                <node comment="adjust sensitivity" name="multiply4" position="27.00,5.00" prototype="math.multiply">
                    <port name="value2" type="float" value="0.2"/>
                </node>
                <node name="multiply5" position="22.00,18.00" prototype="math.multiply"/>
                <node comment="reference positions" name="multiply6" position="15.00,6.00" prototype="math.multiply"/>
                <node name="negate1" position="13.00,36.00" prototype="math.negate"/>
                <node name="null1" position="20.00,-4.00" prototype="corevector.null"/>
                <node name="number1" position="25.00,18.00" prototype="math.number"/>
                <node name="number2" position="10.00,31.00" prototype="math.number"/>
                <node name="odd1" position="20.00,33.00" prototype="math.odd"/>
                <node name="pow1" position="22.00,13.00" prototype="math.pow">
                    <port name="value1" type="float" value="0.977"/>
                </node>
                <node name="range1" position="22.00,4.00" prototype="math.range">
                    <port name="end" type="float" value="6.0"/>
                </node>
                <node name="rest1" position="22.00,22.00" prototype="list.rest"/>
                <node name="rest2" position="15.00,30.00" prototype="list.rest"/>
                <node name="reverse1" position="19.00,36.00" prototype="list.reverse"/>
                <node comment="desired positions" name="reverse4" position="22.00,27.00" prototype="list.reverse"/>
                <node name="running_total1" position="22.00,21.00" prototype="math.running_total"/>
                <node name="subtract1" position="15.00,0.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="subtract2" position="30.00,11.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract3" position="30.00,24.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node name="subtract4" position="26.00,13.00" prototype="math.subtract"/>
                <node name="subtract5" position="25.00,16.00" prototype="math.subtract">
                    <port name="value1" type="float" value="50.0"/>
                </node>
                <node comment="offsets" name="subtract6" position="15.00,29.00" prototype="math.subtract"/>
                <node name="sum1" position="17.00,20.00" prototype="math.sum"/>
                <node name="switch1" position="16.00,36.00" prototype="list.switch"/>
                <port childReference="multiply4.value1" description="" label="" name="value1" range="value" type="float" value="0.0" widget="float"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="divide1.value2" output="subtract1"/>
                <conn input="floor1.value" output="divide2"/>
                <conn input="subtract5.value2" output="subtract4"/>
                <conn input="pow1.value2" output="range1"/>
                <conn input="multiply5.value2" output="subtract5"/>
                <conn input="odd1.value" output="null1"/>
                <conn input="subtract1.value1" output="null1"/>
                <conn input="divide2.value1" output="null1"/>
                <conn input="last1.list" output="multiply6"/>
                <conn input="subtract4.value1" output="last1"/>
                <conn input="multiply6.value1" output="divide1"/>
                <conn input="multiply6.value2" output="range1"/>
                <conn input="multiply5.value1" output="pow1"/>
                <conn input="running_total1.values" output="combine2"/>
                <conn input="combine2.list6" output="number1"/>
                <conn input="combine2.list1" output="multiply5"/>
                <conn input="rest1.list" output="running_total1"/>
                <conn input="subtract3.value2" output="rest1"/>
                <conn input="subtract6.value1" output="multiply6"/>
                <conn input="rest2.list" output="subtract6"/>
                <conn input="combine3.list1" output="number2"/>
                <conn input="negate1.value" output="combine3"/>
                <conn input="switch1.index" output="odd1"/>
                <conn input="combine4.list1" output="negate1"/>
                <conn input="reverse1.list" output="combine3"/>
                <conn input="combine4.list7" output="reverse1"/>
                <conn input="switch1.input2" output="number2"/>
                <conn input="combine4.list3" output="switch1"/>
                <conn input="limit1.value" output="subtract3"/>
                <conn input="reverse4.list" output="limit1"/>
                <conn input="limit2.value" output="rest2"/>
                <conn input="combine3.list7" output="limit2"/>
                <conn input="range1.end" output="floor1"/>
                <conn input="subtract4.value2" output="multiply4"/>
                <conn input="even1.value" output="null1"/>
                <conn input="subtract2.value2" output="last1"/>
                <conn input="multiply1.value1" output="subtract2"/>
                <conn input="multiply1.value2" output="even1"/>
                <conn input="add2.value1" output="multiply1"/>
                <conn input="subtract6.value2" output="reverse4"/>
                <conn input="subtract5.value1" output="add2"/>
                <conn input="subtract3.value1" output="add2"/>
                <conn input="find_exp.value_1" output="last1"/>
                <conn input="find_exp.value_2" output="multiply4"/>
                <conn input="find_exp.value_3" output="null1"/>
                <conn input="pow1.value1" output="find_exp"/>
                <conn input="sum1.values" output="multiply5"/>
            </node>
            <node name="path" position="16.00,6.00" prototype="corevector.null"/>
            <node name="point2" position="22.00,-5.00" prototype="corevector.point"/>
            <node name="point_on_path1" position="18.00,11.00" prototype="corevector.point_on_path"/>
            <node name="quad_curve2" position="25.00,-8.00" prototype="corevector.quad_curve">
                <port name="point2" type="point" value="99.99,0.00"/>
                <port name="distance" type="float" value="0.0"/>
            </node>
            <node name="resample2" position="22.00,-6.00" prototype="corevector.resample">
                <port name="method" type="string" value="amount"/>
                <port name="length" type="float" value="1.0"/>
            </node>
            <node name="switch2" position="25.00,3.00" prototype="list.switch"/>
            <port childReference="resample2.points" description="The amount of output points." label="" min="2.0" name="number" range="value" type="int" value="10" widget="int"/>
            <port childReference="quad_curve2.distance" description="The offset of the curve from a straight line." label="" max="500.0" min="-500.0" name="distance" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="quad_curve2.t" description="The position of the off-curve point (0 - 100)." label="" name="tilt" range="value" type="float" value="50.0" widget="float"/>
            <port childReference="path.shape" description="The input shape." label="" name="path" range="value" type="geometry" widget="none"/>
            <conn input="resample2.shape" output="quad_curve2"/>
            <conn input="point2.value" output="resample2"/>
            <conn input="lookup8.list" output="point2"/>
            <conn input="lookup6.list" output="point2"/>
            <conn input="limit3.value" output="lookup6"/>
            <conn input="count2.list" output="point2"/>
            <conn input="add2.value1" output="limit3"/>
            <conn input="limit2.value" output="add2"/>
            <conn input="lookup5.list" output="quad_curve2"/>
            <conn input="offsets3.shape" output="count2"/>
            <conn input="offsets2.shape" output="count2"/>
            <conn input="lookup7.list" output="quad_curve2"/>
            <conn input="compare2.value1" output="lookup7"/>
            <conn input="switch2.index" output="compare2"/>
            <conn input="switch2.input2" output="offsets2"/>
            <conn input="switch2.input1" output="offsets3"/>
            <conn input="add2.value2" output="switch2"/>
            <conn input="offsets3.value1" output="lookup5"/>
            <conn input="offsets2.value1" output="lookup5"/>
            <conn input="point_on_path1.shape" output="path"/>
            <conn input="point_on_path1.t" output="limit2"/>
        </node>
        <node name="area" position="37.00,6.00" prototype="core.network" renderedChild="divide1">
            <node name="abs1" position="-2.00,24.00" prototype="math.abs"/>
            <node name="divide1" position="-2.00,25.00" prototype="math.divide">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="lookup4" position="1.00,16.00" prototype="data.lookup"/>
            <node name="lookup5" position="-2.00,16.00" prototype="data.lookup">
                <port name="key" type="string" value="y"/>
            </node>
            <node name="multiply1" position="-2.00,20.00" prototype="math.multiply"/>
            <node name="multiply2" position="1.00,20.00" prototype="math.multiply"/>
            <node name="null1" position="-2.00,13.00" prototype="corevector.null"/>
            <node name="point1" position="-2.00,14.00" prototype="corevector.point"/>
            <node name="shift1" position="-5.00,18.00" prototype="list.shift"/>
            <node name="shift2" position="2.00,18.00" prototype="list.shift"/>
            <node name="subtract1" position="-2.00,23.00" prototype="math.subtract"/>
            <node name="sum1" position="-2.00,21.00" prototype="math.sum"/>
            <node name="sum2" position="1.00,21.00" prototype="math.sum"/>
            <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
            <conn input="lookup4.list" output="point1"/>
            <conn input="lookup5.list" output="point1"/>
            <conn input="shift1.list" output="lookup5"/>
            <conn input="multiply1.value1" output="lookup4"/>
            <conn input="multiply1.value2" output="shift1"/>
            <conn input="sum1.values" output="multiply1"/>
            <conn input="shift2.list" output="lookup4"/>
            <conn input="multiply2.value1" output="shift2"/>
            <conn input="multiply2.value2" output="lookup5"/>
            <conn input="sum2.values" output="multiply2"/>
            <conn input="subtract1.value1" output="sum1"/>
            <conn input="subtract1.value2" output="sum2"/>
            <conn input="abs1.value" output="subtract1"/>
            <conn input="divide1.value1" output="abs1"/>
            <conn input="point1.value" output="null1"/>
        </node>
        <node name="area1" position="40.00,6.00" prototype="core.network" renderedChild="divide1">
            <node name="abs1" position="-2.00,24.00" prototype="math.abs"/>
            <node name="divide1" position="-2.00,25.00" prototype="math.divide">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="lookup4" position="1.00,16.00" prototype="data.lookup"/>
            <node name="lookup5" position="-2.00,16.00" prototype="data.lookup">
                <port name="key" type="string" value="y"/>
            </node>
            <node name="multiply1" position="-2.00,20.00" prototype="math.multiply"/>
            <node name="multiply2" position="1.00,20.00" prototype="math.multiply"/>
            <node name="null1" position="-2.00,13.00" prototype="corevector.null"/>
            <node name="point1" position="-2.00,14.00" prototype="corevector.point"/>
            <node name="shift1" position="-5.00,18.00" prototype="list.shift"/>
            <node name="shift2" position="2.00,18.00" prototype="list.shift"/>
            <node name="subtract1" position="-2.00,23.00" prototype="math.subtract"/>
            <node name="sum1" position="-2.00,21.00" prototype="math.sum"/>
            <node name="sum2" position="1.00,21.00" prototype="math.sum"/>
            <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
            <conn input="lookup4.list" output="point1"/>
            <conn input="lookup5.list" output="point1"/>
            <conn input="shift1.list" output="lookup5"/>
            <conn input="multiply1.value1" output="lookup4"/>
            <conn input="multiply1.value2" output="shift1"/>
            <conn input="sum1.values" output="multiply1"/>
            <conn input="shift2.list" output="lookup4"/>
            <conn input="multiply2.value1" output="shift2"/>
            <conn input="multiply2.value2" output="lookup5"/>
            <conn input="sum2.values" output="multiply2"/>
            <conn input="subtract1.value1" output="sum1"/>
            <conn input="subtract1.value2" output="sum2"/>
            <conn input="abs1.value" output="subtract1"/>
            <conn input="divide1.value1" output="abs1"/>
            <conn input="point1.value" output="null1"/>
        </node>
        <node comment="removes duplicate points" name="clean" position="53.00,-1.00" prototype="core.network" renderedChild="connect1">
            <node name="boolean1" position="10.00,20.00" prototype="math.boolean"/>
            <node comment="item matches previous" name="combine1" position="10.00,23.00" prototype="list.combine"/>
            <node comment="item is type 1" name="combine2" position="7.00,23.00" prototype="list.combine"/>
            <node name="compare1" position="7.00,19.00" prototype="math.compare">
                <port name="value2" type="float" value="1.0"/>
                <port name="comparator" type="string" value="=="/>
            </node>
            <node name="compare2" position="10.00,26.00" prototype="math.compare">
                <port name="comparator" type="string" value="=="/>
            </node>
            <node name="compare3" position="13.00,21.00" prototype="math.compare">
                <port name="value2" type="float" value="0.01"/>
            </node>
            <node name="connect1" position="16.00,29.00" prototype="corevector.connect"/>
            <node name="cull1" position="16.00,28.00" prototype="list.cull"/>
            <node name="distance1" position="13.00,20.00" prototype="math.distance"/>
            <node name="lookup1" position="7.00,17.00" prototype="data.lookup">
                <port name="key" type="string" value="type"/>
            </node>
            <node name="multiply1" position="10.00,25.00" prototype="math.multiply"/>
            <node name="null1" position="16.00,11.00" prototype="corevector.null"/>
            <node name="number1" position="7.00,18.00" prototype="math.number"/>
            <node name="point1" position="16.00,13.00" prototype="corevector.point"/>
            <node name="rest1" position="10.00,17.00" prototype="list.rest"/>
            <node name="rest2" position="13.00,16.00" prototype="list.rest"/>
            <node name="rest3" position="7.00,16.00" prototype="list.rest"/>
            <node name="reverse1" position="10.00,16.00" prototype="list.reverse"/>
            <node name="reverse2" position="10.00,18.00" prototype="list.reverse"/>
            <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
            <conn input="reverse1.list" output="point1"/>
            <conn input="rest1.list" output="reverse1"/>
            <conn input="reverse2.list" output="rest1"/>
            <conn input="rest2.list" output="point1"/>
            <conn input="cull1.list" output="point1"/>
            <conn input="connect1.points" output="cull1"/>
            <conn input="number1.value" output="lookup1"/>
            <conn input="compare1.value1" output="number1"/>
            <conn input="point1.value" output="null1"/>
            <conn input="combine1.list1" output="boolean1"/>
            <conn input="rest3.list" output="point1"/>
            <conn input="lookup1.list" output="rest3"/>
            <conn input="multiply1.value1" output="combine2"/>
            <conn input="multiply1.value2" output="combine1"/>
            <conn input="combine2.list1" output="boolean1"/>
            <conn input="combine2.list2" output="compare1"/>
            <conn input="compare2.value1" output="multiply1"/>
            <conn input="cull1.booleans" output="compare2"/>
            <conn input="distance1.point1" output="reverse2"/>
            <conn input="distance1.point2" output="rest2"/>
            <conn input="compare3.value1" output="distance1"/>
            <conn input="combine1.list2" output="compare3"/>
        </node>
        <node name="colorize1" position="12.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#ad0000ff"/>
            <port name="strokeWidth" type="float" value="5.0"/>
        </node>
        <node name="colorize10" position="50.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize11" position="56.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize12" position="56.00,12.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#ad0000ff"/>
            <port name="strokeWidth" type="float" value="5.0"/>
        </node>
        <node name="colorize13" position="53.00,4.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#c9c9c9ff"/>
            <port name="strokeWidth" type="float" value="1.0"/>
        </node>
        <node name="colorize14" position="63.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize15" position="72.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize16" position="22.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#ad0000ff"/>
            <port name="strokeWidth" type="float" value="4.0"/>
        </node>
        <node name="colorize17" position="66.00,14.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#7575d7ff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize18" position="69.00,14.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#ad0000ff"/>
        </node>
        <node name="colorize19" position="83.00,5.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#ad0000ff"/>
        </node>
        <node name="colorize2" position="9.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize20" position="79.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize21" position="89.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize3" position="5.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize4" position="25.00,16.00" prototype="corevector.colorize"/>
        <node name="colorize5" position="19.00,16.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize6" position="33.00,4.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#ad0000ff"/>
            <port name="strokeWidth" type="float" value="5.0"/>
        </node>
        <node name="colorize7" position="44.00,15.00" prototype="corevector.colorize"/>
        <node name="colorize8" position="30.00,10.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#fcfcfcff"/>
            <port name="strokeWidth" type="float" value="3.0"/>
        </node>
        <node name="colorize9" position="36.00,4.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="stroke" type="color" value="#ad0000ff"/>
            <port name="strokeWidth" type="float" value="5.0"/>
        </node>
        <node name="combine1" position="52.00,35.00" prototype="list.combine"/>
        <node name="combine10" position="12.00,12.00" prototype="list.combine"/>
        <node name="combine11" position="56.00,8.00" prototype="list.combine"/>
        <node name="combine2" position="66.00,12.00" prototype="list.combine"/>
        <node name="combine3" position="8.00,18.00" prototype="list.combine"/>
        <node name="combine4" position="22.00,18.00" prototype="list.combine"/>
        <node name="combine5" position="33.00,18.00" prototype="list.combine"/>
        <node name="combine6" position="53.00,18.00" prototype="list.combine"/>
        <node name="combine7" position="66.00,18.00" prototype="list.combine"/>
        <node name="combine8" position="82.00,18.00" prototype="list.combine"/>
        <node name="combine9" position="82.00,0.00" prototype="list.combine"/>
        <node name="compare1" position="43.00,9.00" prototype="math.compare">
            <port name="value2" type="float" value="119.0"/>
            <port name="comparator" type="string" value="&gt;"/>
        </node>
        <node name="connect1" position="12.00,15.00" prototype="corevector.connect">
            <port name="closed" type="boolean" value="false"/>
        </node>
        <node name="connect2" position="12.00,4.00" prototype="corevector.connect"/>
        <node name="connect3" position="33.00,2.00" prototype="corevector.connect"/>
        <node name="connect4" position="36.00,2.00" prototype="corevector.connect"/>
        <node name="connect5" position="56.00,11.00" prototype="corevector.connect">
            <port name="closed" type="boolean" value="false"/>
        </node>
        <node name="convert_range1" position="72.00,9.00" prototype="math.convert_range">
            <port name="source_end" type="float" value="120.0"/>
            <port name="target_start" type="float" value="42.0"/>
            <port name="target_end" type="float" value="138.0"/>
        </node>
        <node name="countUp" position="37.00,9.00" prototype="core.network" renderedChild="divide1">
            <node name="compare1" position="27.00,14.00" prototype="math.compare">
                <port name="value2" type="float" value="120.0"/>
                <port name="comparator" type="string" value="&gt;="/>
            </node>
            <node name="divide1" position="27.00,21.00" prototype="math.divide">
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="index" position="28.00,10.00" prototype="math.number"/>
            <node name="integer1" position="27.00,20.00" prototype="math.integer"/>
            <node name="range1" position="32.00,12.00" prototype="math.range">
                <port name="step" type="float" value="436.0"/>
            </node>
            <node name="slice2" position="31.00,15.00" prototype="list.slice">
                <port name="size" type="int" value="1"/>
            </node>
            <node name="switch1" position="27.00,18.00" prototype="list.switch"/>
            <node name="total" position="31.00,10.00" prototype="math.number"/>
            <port childReference="total.value" description="" label="" name="value" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="index.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
            <conn input="range1.end" output="total"/>
            <conn input="slice2.start_index" output="index"/>
            <conn input="compare1.value1" output="index"/>
            <conn input="switch1.index" output="compare1"/>
            <conn input="slice2.list" output="range1"/>
            <conn input="switch1.input1" output="slice2"/>
            <conn input="switch1.input2" output="total"/>
            <conn input="integer1.value" output="switch1"/>
            <conn input="divide1.value1" output="integer1"/>
        </node>
        <node name="countUp1" position="40.00,9.00" prototype="core.network" renderedChild="divide1">
            <node name="compare1" position="27.00,14.00" prototype="math.compare">
                <port name="value2" type="float" value="92.0"/>
                <port name="comparator" type="string" value="&gt;="/>
            </node>
            <node name="divide1" position="27.00,21.00" prototype="math.divide">
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="index" position="28.00,10.00" prototype="math.number"/>
            <node name="integer1" position="27.00,20.00" prototype="math.integer"/>
            <node name="range1" position="32.00,12.00" prototype="math.range">
                <port name="step" type="float" value="436.0"/>
            </node>
            <node name="slice2" position="31.00,15.00" prototype="list.slice">
                <port name="size" type="int" value="1"/>
            </node>
            <node name="switch1" position="27.00,18.00" prototype="list.switch"/>
            <node name="total" position="31.00,10.00" prototype="math.number"/>
            <port childReference="total.value" description="" label="" name="value" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="index.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
            <conn input="range1.end" output="total"/>
            <conn input="slice2.start_index" output="index"/>
            <conn input="compare1.value1" output="index"/>
            <conn input="switch1.index" output="compare1"/>
            <conn input="slice2.list" output="range1"/>
            <conn input="switch1.input1" output="slice2"/>
            <conn input="switch1.input2" output="total"/>
            <conn input="integer1.value" output="switch1"/>
            <conn input="divide1.value1" output="integer1"/>
        </node>
        <node name="divide1" position="25.00,12.00" prototype="math.divide">
            <port name="value2" type="float" value="6.0"/>
        </node>
        <node name="ellipse1" position="9.00,3.00" prototype="corevector.ellipse">
            <port name="width" type="float" value="16.0"/>
            <port name="height" type="float" value="16.0"/>
        </node>
        <node name="first1" position="13.00,10.00" prototype="list.first"/>
        <node name="first2" position="57.00,6.00" prototype="list.first"/>
        <node comment="finds a curve that passes through all points in a path" name="fit_curve2" position="12.00,6.00" prototype="core.network" renderedChild="switch1">
            <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
            <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node name="closed" position="94.00,6.00" prototype="math.boolean">
                <port name="value" type="boolean" value="true"/>
            </node>
            <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
            <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
            <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
            <node name="count2" position="87.00,-12.00" prototype="list.count"/>
            <node name="count3" position="105.00,-12.00" prototype="list.count"/>
            <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                <port name="value1" type="float" value="25.0"/>
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="first1" position="73.00,-3.00" prototype="list.first"/>
            <node name="first2" position="79.00,-3.00" prototype="list.first"/>
            <node name="last1" position="88.00,-3.00" prototype="list.last"/>
            <node name="last2" position="94.00,-3.00" prototype="list.last"/>
            <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
            <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
            <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
            <node name="range2" position="82.00,-9.00" prototype="math.range"/>
            <node name="range3" position="86.00,-6.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range4" position="105.00,-7.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range5" position="102.00,-9.00" prototype="math.range"/>
            <node name="second6" position="76.00,-3.00" prototype="list.second"/>
            <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                <port name="size" type="int" value="3"/>
            </node>
            <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                <port name="start_index" type="int" value="2"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="1.0"/>
            </node>
            <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
            <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
            <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="25.0" widget="float"/>
            <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
            <conn input="count2.list" output="null2"/>
            <conn input="subtract1.value1" output="count2"/>
            <conn input="range2.end" output="subtract1"/>
            <conn input="add_pairs.list" output="null2"/>
            <conn input="add_pairs.start_index" output="range2"/>
            <conn input="first1.list" output="null2"/>
            <conn input="second6.list" output="null2"/>
            <conn input="first2.list" output="add_pairs"/>
            <conn input="make_curve5.pt1" output="first1"/>
            <conn input="make_curve5.pt2" output="second6"/>
            <conn input="make_curve5.c1" output="first1"/>
            <conn input="make_curve5.c2" output="first2"/>
            <conn input="last1.list" output="add_pairs"/>
            <conn input="last2.list" output="null2"/>
            <conn input="slice6.list" output="null2"/>
            <conn input="slice6.start_index" output="subtract1"/>
            <conn input="make_curve7.pt1" output="slice6"/>
            <conn input="make_curve7.pt2" output="last2"/>
            <conn input="make_curve7.c2" output="last2"/>
            <conn input="make_curve7.c1" output="last1"/>
            <conn input="combine7.list1" output="make_curve5"/>
            <conn input="combine7.list7" output="make_curve7"/>
            <conn input="range3.end" output="subtract1"/>
            <conn input="middle_curves.controls" output="add_pairs"/>
            <conn input="middle_curves.index" output="range3"/>
            <conn input="middle_curves.points" output="null2"/>
            <conn input="combine7.list4" output="middle_curves"/>
            <conn input="add_pairs.value" output="divide1"/>
            <conn input="combine1.list1" output="null2"/>
            <conn input="slice1.list" output="null2"/>
            <conn input="combine1.list2" output="slice1"/>
            <conn input="subtract2.value1" output="count3"/>
            <conn input="range5.end" output="subtract2"/>
            <conn input="range4.end" output="subtract2"/>
            <conn input="middle_curves1.index" output="range4"/>
            <conn input="middle_curves1.points" output="combine1"/>
            <conn input="count3.list" output="combine1"/>
            <conn input="switch1.index" output="closed"/>
            <conn input="switch1.input1" output="combine7"/>
            <conn input="null2.shape" output="point1"/>
            <conn input="add_pairs2.value" output="divide1"/>
            <conn input="add_pairs2.list" output="combine1"/>
            <conn input="add_pairs2.start_index" output="range5"/>
            <conn input="middle_curves1.controls" output="add_pairs2"/>
            <conn input="connect2.points" output="point2"/>
            <conn input="point2.value" output="middle_curves1"/>
            <conn input="switch1.input2" output="connect2"/>
        </node>
        <node comment="finds a curve that passes through all points in a path" name="fit_curve3" position="33.00,3.00" prototype="core.network" renderedChild="switch1">
            <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
            <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node name="closed" position="94.00,6.00" prototype="math.boolean">
                <port name="value" type="boolean" value="true"/>
            </node>
            <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
            <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
            <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
            <node name="count2" position="87.00,-12.00" prototype="list.count"/>
            <node name="count3" position="105.00,-12.00" prototype="list.count"/>
            <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                <port name="value1" type="float" value="25.0"/>
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="first1" position="73.00,-3.00" prototype="list.first"/>
            <node name="first2" position="79.00,-3.00" prototype="list.first"/>
            <node name="last1" position="88.00,-3.00" prototype="list.last"/>
            <node name="last2" position="94.00,-3.00" prototype="list.last"/>
            <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
            <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
            <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
            <node name="range2" position="82.00,-9.00" prototype="math.range"/>
            <node name="range3" position="86.00,-6.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range4" position="105.00,-7.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range5" position="102.00,-9.00" prototype="math.range"/>
            <node name="second6" position="76.00,-3.00" prototype="list.second"/>
            <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                <port name="size" type="int" value="3"/>
            </node>
            <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                <port name="start_index" type="int" value="2"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="1.0"/>
            </node>
            <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
            <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
            <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="25.0" widget="float"/>
            <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
            <conn input="count2.list" output="null2"/>
            <conn input="subtract1.value1" output="count2"/>
            <conn input="range2.end" output="subtract1"/>
            <conn input="add_pairs.list" output="null2"/>
            <conn input="add_pairs.start_index" output="range2"/>
            <conn input="first1.list" output="null2"/>
            <conn input="second6.list" output="null2"/>
            <conn input="first2.list" output="add_pairs"/>
            <conn input="make_curve5.pt1" output="first1"/>
            <conn input="make_curve5.pt2" output="second6"/>
            <conn input="make_curve5.c1" output="first1"/>
            <conn input="make_curve5.c2" output="first2"/>
            <conn input="last1.list" output="add_pairs"/>
            <conn input="last2.list" output="null2"/>
            <conn input="slice6.list" output="null2"/>
            <conn input="slice6.start_index" output="subtract1"/>
            <conn input="make_curve7.pt1" output="slice6"/>
            <conn input="make_curve7.pt2" output="last2"/>
            <conn input="make_curve7.c2" output="last2"/>
            <conn input="make_curve7.c1" output="last1"/>
            <conn input="combine7.list1" output="make_curve5"/>
            <conn input="combine7.list7" output="make_curve7"/>
            <conn input="range3.end" output="subtract1"/>
            <conn input="middle_curves.controls" output="add_pairs"/>
            <conn input="middle_curves.index" output="range3"/>
            <conn input="middle_curves.points" output="null2"/>
            <conn input="combine7.list4" output="middle_curves"/>
            <conn input="add_pairs.value" output="divide1"/>
            <conn input="combine1.list1" output="null2"/>
            <conn input="slice1.list" output="null2"/>
            <conn input="combine1.list2" output="slice1"/>
            <conn input="subtract2.value1" output="count3"/>
            <conn input="range5.end" output="subtract2"/>
            <conn input="range4.end" output="subtract2"/>
            <conn input="middle_curves1.index" output="range4"/>
            <conn input="middle_curves1.points" output="combine1"/>
            <conn input="count3.list" output="combine1"/>
            <conn input="switch1.index" output="closed"/>
            <conn input="switch1.input1" output="combine7"/>
            <conn input="null2.shape" output="point1"/>
            <conn input="add_pairs2.value" output="divide1"/>
            <conn input="add_pairs2.list" output="combine1"/>
            <conn input="add_pairs2.start_index" output="range5"/>
            <conn input="middle_curves1.controls" output="add_pairs2"/>
            <conn input="connect2.points" output="point2"/>
            <conn input="point2.value" output="middle_curves1"/>
            <conn input="switch1.input2" output="connect2"/>
        </node>
        <node comment="finds a curve that passes through all points in a path" name="fit_curve4" position="22.00,15.00" prototype="core.network" renderedChild="switch1">
            <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
            <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node name="closed" position="94.00,6.00" prototype="math.boolean">
                <port name="value" type="boolean" value="true"/>
            </node>
            <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
            <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
            <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
            <node name="count2" position="87.00,-12.00" prototype="list.count"/>
            <node name="count3" position="105.00,-12.00" prototype="list.count"/>
            <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                <port name="value1" type="float" value="24.0"/>
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="first1" position="73.00,-3.00" prototype="list.first"/>
            <node name="first2" position="79.00,-3.00" prototype="list.first"/>
            <node name="last1" position="88.00,-3.00" prototype="list.last"/>
            <node name="last2" position="94.00,-3.00" prototype="list.last"/>
            <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
            <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
            <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
            <node name="range2" position="82.00,-9.00" prototype="math.range"/>
            <node name="range3" position="86.00,-6.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range4" position="105.00,-7.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range5" position="102.00,-9.00" prototype="math.range"/>
            <node name="second6" position="76.00,-3.00" prototype="list.second"/>
            <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                <port name="size" type="int" value="3"/>
            </node>
            <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                <port name="start_index" type="int" value="2"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="1.0"/>
            </node>
            <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
            <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
            <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="24.0" widget="float"/>
            <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
            <conn input="count2.list" output="null2"/>
            <conn input="subtract1.value1" output="count2"/>
            <conn input="range2.end" output="subtract1"/>
            <conn input="add_pairs.list" output="null2"/>
            <conn input="add_pairs.start_index" output="range2"/>
            <conn input="first1.list" output="null2"/>
            <conn input="second6.list" output="null2"/>
            <conn input="first2.list" output="add_pairs"/>
            <conn input="make_curve5.pt1" output="first1"/>
            <conn input="make_curve5.pt2" output="second6"/>
            <conn input="make_curve5.c1" output="first1"/>
            <conn input="make_curve5.c2" output="first2"/>
            <conn input="last1.list" output="add_pairs"/>
            <conn input="last2.list" output="null2"/>
            <conn input="slice6.list" output="null2"/>
            <conn input="slice6.start_index" output="subtract1"/>
            <conn input="make_curve7.pt1" output="slice6"/>
            <conn input="make_curve7.pt2" output="last2"/>
            <conn input="make_curve7.c2" output="last2"/>
            <conn input="make_curve7.c1" output="last1"/>
            <conn input="combine7.list1" output="make_curve5"/>
            <conn input="combine7.list7" output="make_curve7"/>
            <conn input="range3.end" output="subtract1"/>
            <conn input="middle_curves.controls" output="add_pairs"/>
            <conn input="middle_curves.index" output="range3"/>
            <conn input="middle_curves.points" output="null2"/>
            <conn input="combine7.list4" output="middle_curves"/>
            <conn input="add_pairs.value" output="divide1"/>
            <conn input="combine1.list1" output="null2"/>
            <conn input="slice1.list" output="null2"/>
            <conn input="combine1.list2" output="slice1"/>
            <conn input="subtract2.value1" output="count3"/>
            <conn input="range5.end" output="subtract2"/>
            <conn input="range4.end" output="subtract2"/>
            <conn input="middle_curves1.index" output="range4"/>
            <conn input="middle_curves1.points" output="combine1"/>
            <conn input="count3.list" output="combine1"/>
            <conn input="switch1.index" output="closed"/>
            <conn input="switch1.input1" output="combine7"/>
            <conn input="null2.shape" output="point1"/>
            <conn input="add_pairs2.value" output="divide1"/>
            <conn input="add_pairs2.list" output="combine1"/>
            <conn input="add_pairs2.start_index" output="range5"/>
            <conn input="middle_curves1.controls" output="add_pairs2"/>
            <conn input="connect2.points" output="point2"/>
            <conn input="point2.value" output="middle_curves1"/>
            <conn input="switch1.input2" output="connect2"/>
        </node>
        <node comment="finds a curve that passes through all points in a path" name="fit_curve5" position="36.00,3.00" prototype="core.network" renderedChild="switch1">
            <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
            <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                    <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                    <node name="P0" position="88.00,-8.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P1" position="96.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="1"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="P2" position="102.00,-8.00" prototype="list.slice">
                        <port name="start_index" type="int" value="2"/>
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="add2" position="89.00,7.00" prototype="math.add">
                        <port name="value2" type="float" value="180.0"/>
                    </node>
                    <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                    <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                    <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                    <node name="curviness" position="84.00,1.00" prototype="math.number">
                        <port name="value" type="float" value="0.25"/>
                    </node>
                    <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                    <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                    <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                    <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                    <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                    <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                        <port name="key" type="string" value="length"/>
                    </node>
                    <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                    <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                    <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                    <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                    <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                    <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                    <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                    <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                    <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                    <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                    <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <conn input="lookup9.list" output="line7"/>
                    <conn input="line_angle8.angle" output="angle3"/>
                    <conn input="line_angle8.distance" output="lookup9"/>
                    <conn input="point11.value" output="line_angle8"/>
                    <conn input="second8.list" output="point11"/>
                    <conn input="angle4.point1" output="second8"/>
                    <conn input="line_angle7.angle" output="angle4"/>
                    <conn input="point12.value" output="line_angle7"/>
                    <conn input="multiply3.value1" output="lookup9"/>
                    <conn input="line_angle7.distance" output="multiply3"/>
                    <conn input="second7.list" output="point12"/>
                    <conn input="add2.value1" output="angle4"/>
                    <conn input="line_angle6.angle" output="add2"/>
                    <conn input="second6.list" output="point13"/>
                    <conn input="point13.value" output="line_angle6"/>
                    <conn input="lookup10.list" output="line6"/>
                    <conn input="multiply4.value2" output="lookup10"/>
                    <conn input="line_angle6.distance" output="multiply4"/>
                    <conn input="combine7.list3" output="second6"/>
                    <conn input="combine7.list4" output="second7"/>
                    <conn input="P0.list" output="null3"/>
                    <conn input="angle3.point2" output="P0"/>
                    <conn input="line6.point1" output="P0"/>
                    <conn input="P1.list" output="null3"/>
                    <conn input="line7.point1" output="P1"/>
                    <conn input="angle3.point1" output="P1"/>
                    <conn input="line_angle8.position" output="P1"/>
                    <conn input="line_angle7.position" output="P1"/>
                    <conn input="line_angle6.position" output="P1"/>
                    <conn input="line6.point2" output="P1"/>
                    <conn input="P2.list" output="null3"/>
                    <conn input="line7.point2" output="P2"/>
                    <conn input="angle4.point2" output="P2"/>
                    <conn input="multiply3.value2" output="curviness"/>
                    <conn input="multiply4.value1" output="curviness"/>
                </node>
                <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                <conn input="find_controls.shape" output="slice7"/>
            </node>
            <node name="closed" position="94.00,6.00" prototype="math.boolean">
                <port name="value" type="boolean" value="true"/>
            </node>
            <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
            <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
            <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
            <node name="count2" position="87.00,-12.00" prototype="list.count"/>
            <node name="count3" position="105.00,-12.00" prototype="list.count"/>
            <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                <port name="value1" type="float" value="25.0"/>
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node name="first1" position="73.00,-3.00" prototype="list.first"/>
            <node name="first2" position="79.00,-3.00" prototype="list.first"/>
            <node name="last1" position="88.00,-3.00" prototype="list.last"/>
            <node name="last2" position="94.00,-3.00" prototype="list.last"/>
            <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
            </node>
            <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                <node name="add1" position="86.00,3.00" prototype="math.add">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                <node name="slice1" position="92.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice2" position="95.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice3" position="82.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="slice4" position="85.00,5.00" prototype="list.slice">
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                <conn input="multiply1.value1" output="number1"/>
                <conn input="add1.value1" output="number1"/>
                <conn input="slice1.list" output="controls"/>
                <conn input="slice2.list" output="controls"/>
                <conn input="slice3.start_index" output="number1"/>
                <conn input="slice4.start_index" output="add1"/>
                <conn input="slice3.list" output="points"/>
                <conn input="slice4.list" output="points"/>
                <conn input="make_curve6.pt1" output="slice3"/>
                <conn input="make_curve6.pt2" output="slice4"/>
                <conn input="make_curve6.c1" output="slice1"/>
                <conn input="make_curve6.c2" output="slice2"/>
                <conn input="subtract1.value1" output="multiply1"/>
                <conn input="slice1.start_index" output="subtract1"/>
                <conn input="slice2.start_index" output="multiply1"/>
            </node>
            <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
            <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
            <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
            <node name="range2" position="82.00,-9.00" prototype="math.range"/>
            <node name="range3" position="86.00,-6.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range4" position="105.00,-7.00" prototype="math.range">
                <port name="start" type="float" value="1.0"/>
            </node>
            <node name="range5" position="102.00,-9.00" prototype="math.range"/>
            <node name="second6" position="76.00,-3.00" prototype="list.second"/>
            <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                <port name="size" type="int" value="3"/>
            </node>
            <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                <port name="start_index" type="int" value="2"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="2.0"/>
            </node>
            <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                <port name="value2" type="float" value="1.0"/>
            </node>
            <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
            <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
            <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="25.0" widget="float"/>
            <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
            <conn input="count2.list" output="null2"/>
            <conn input="subtract1.value1" output="count2"/>
            <conn input="range2.end" output="subtract1"/>
            <conn input="add_pairs.list" output="null2"/>
            <conn input="add_pairs.start_index" output="range2"/>
            <conn input="first1.list" output="null2"/>
            <conn input="second6.list" output="null2"/>
            <conn input="first2.list" output="add_pairs"/>
            <conn input="make_curve5.pt1" output="first1"/>
            <conn input="make_curve5.pt2" output="second6"/>
            <conn input="make_curve5.c1" output="first1"/>
            <conn input="make_curve5.c2" output="first2"/>
            <conn input="last1.list" output="add_pairs"/>
            <conn input="last2.list" output="null2"/>
            <conn input="slice6.list" output="null2"/>
            <conn input="slice6.start_index" output="subtract1"/>
            <conn input="make_curve7.pt1" output="slice6"/>
            <conn input="make_curve7.pt2" output="last2"/>
            <conn input="make_curve7.c2" output="last2"/>
            <conn input="make_curve7.c1" output="last1"/>
            <conn input="combine7.list1" output="make_curve5"/>
            <conn input="combine7.list7" output="make_curve7"/>
            <conn input="range3.end" output="subtract1"/>
            <conn input="middle_curves.controls" output="add_pairs"/>
            <conn input="middle_curves.index" output="range3"/>
            <conn input="middle_curves.points" output="null2"/>
            <conn input="combine7.list4" output="middle_curves"/>
            <conn input="add_pairs.value" output="divide1"/>
            <conn input="combine1.list1" output="null2"/>
            <conn input="slice1.list" output="null2"/>
            <conn input="combine1.list2" output="slice1"/>
            <conn input="subtract2.value1" output="count3"/>
            <conn input="range5.end" output="subtract2"/>
            <conn input="range4.end" output="subtract2"/>
            <conn input="middle_curves1.index" output="range4"/>
            <conn input="middle_curves1.points" output="combine1"/>
            <conn input="count3.list" output="combine1"/>
            <conn input="switch1.index" output="closed"/>
            <conn input="switch1.input1" output="combine7"/>
            <conn input="null2.shape" output="point1"/>
            <conn input="add_pairs2.value" output="divide1"/>
            <conn input="add_pairs2.list" output="combine1"/>
            <conn input="add_pairs2.start_index" output="range5"/>
            <conn input="middle_curves1.controls" output="add_pairs2"/>
            <conn input="connect2.points" output="point2"/>
            <conn input="point2.value" output="middle_curves1"/>
            <conn input="switch1.input2" output="connect2"/>
        </node>
        <node name="fragment2" position="83.00,4.00" prototype="core.network" renderedChild="clean">
            <node name="area" position="2.00,5.00" prototype="core.network" renderedChild="divide1">
                <node name="abs1" position="-2.00,24.00" prototype="math.abs"/>
                <node name="divide1" position="-2.00,25.00" prototype="math.divide">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="lookup4" position="1.00,16.00" prototype="data.lookup"/>
                <node name="lookup5" position="-2.00,16.00" prototype="data.lookup">
                    <port name="key" type="string" value="y"/>
                </node>
                <node name="multiply1" position="-2.00,20.00" prototype="math.multiply"/>
                <node name="multiply2" position="1.00,20.00" prototype="math.multiply"/>
                <node name="null1" position="-2.00,13.00" prototype="corevector.null"/>
                <node name="point1" position="-2.00,14.00" prototype="corevector.point"/>
                <node name="shift1" position="-5.00,18.00" prototype="list.shift"/>
                <node name="shift2" position="2.00,18.00" prototype="list.shift"/>
                <node name="subtract1" position="-2.00,23.00" prototype="math.subtract"/>
                <node name="sum1" position="-2.00,21.00" prototype="math.sum"/>
                <node name="sum2" position="1.00,21.00" prototype="math.sum"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="lookup4.list" output="point1"/>
                <conn input="lookup5.list" output="point1"/>
                <conn input="shift1.list" output="lookup5"/>
                <conn input="multiply1.value1" output="lookup4"/>
                <conn input="multiply1.value2" output="shift1"/>
                <conn input="sum1.values" output="multiply1"/>
                <conn input="shift2.list" output="lookup4"/>
                <conn input="multiply2.value1" output="shift2"/>
                <conn input="multiply2.value2" output="lookup5"/>
                <conn input="sum2.values" output="multiply2"/>
                <conn input="subtract1.value1" output="sum1"/>
                <conn input="subtract1.value2" output="sum2"/>
                <conn input="abs1.value" output="subtract1"/>
                <conn input="divide1.value1" output="abs1"/>
                <conn input="point1.value" output="null1"/>
            </node>
            <node comment="removes duplicate points" name="clean" position="1.00,9.00" prototype="core.network" renderedChild="connect1">
                <node name="boolean1" position="10.00,20.00" prototype="math.boolean"/>
                <node comment="item matches previous" name="combine1" position="10.00,23.00" prototype="list.combine"/>
                <node comment="item is type 1" name="combine2" position="7.00,23.00" prototype="list.combine"/>
                <node name="compare1" position="7.00,19.00" prototype="math.compare">
                    <port name="value2" type="float" value="1.0"/>
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare2" position="10.00,26.00" prototype="math.compare">
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare3" position="13.00,21.00" prototype="math.compare">
                    <port name="value2" type="float" value="0.01"/>
                </node>
                <node name="connect1" position="16.00,29.00" prototype="corevector.connect"/>
                <node name="cull1" position="16.00,28.00" prototype="list.cull"/>
                <node name="distance1" position="13.00,20.00" prototype="math.distance"/>
                <node name="lookup1" position="7.00,17.00" prototype="data.lookup">
                    <port name="key" type="string" value="type"/>
                </node>
                <node name="multiply1" position="10.00,25.00" prototype="math.multiply"/>
                <node name="null1" position="16.00,11.00" prototype="corevector.null"/>
                <node name="number1" position="7.00,18.00" prototype="math.number"/>
                <node name="point1" position="16.00,13.00" prototype="corevector.point"/>
                <node name="rest1" position="10.00,17.00" prototype="list.rest"/>
                <node name="rest2" position="13.00,16.00" prototype="list.rest"/>
                <node name="rest3" position="7.00,16.00" prototype="list.rest"/>
                <node name="reverse1" position="10.00,16.00" prototype="list.reverse"/>
                <node name="reverse2" position="10.00,18.00" prototype="list.reverse"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="reverse1.list" output="point1"/>
                <conn input="rest1.list" output="reverse1"/>
                <conn input="reverse2.list" output="rest1"/>
                <conn input="rest2.list" output="point1"/>
                <conn input="cull1.list" output="point1"/>
                <conn input="connect1.points" output="cull1"/>
                <conn input="number1.value" output="lookup1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="point1.value" output="null1"/>
                <conn input="combine1.list1" output="boolean1"/>
                <conn input="rest3.list" output="point1"/>
                <conn input="lookup1.list" output="rest3"/>
                <conn input="multiply1.value1" output="combine2"/>
                <conn input="multiply1.value2" output="combine1"/>
                <conn input="combine2.list1" output="boolean1"/>
                <conn input="combine2.list2" output="compare1"/>
                <conn input="compare2.value1" output="multiply1"/>
                <conn input="cull1.booleans" output="compare2"/>
                <conn input="distance1.point1" output="reverse2"/>
                <conn input="distance1.point2" output="rest2"/>
                <conn input="compare3.value1" output="distance1"/>
                <conn input="combine1.list2" output="compare3"/>
            </node>
            <node name="compare1" position="2.00,6.00" prototype="math.compare">
                <port name="value2" type="float" value="5.0"/>
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="compound2" position="1.00,2.00" prototype="corevector.compound">
                <port name="function" type="string" value="subtracted"/>
            </node>
            <node name="contours" position="1.00,3.00" prototype="core.network" renderedChild="slice_connect">
                <node name="combine3" position="-5.00,24.00" prototype="list.combine"/>
                <node name="count1" position="-6.00,11.00" prototype="list.count"/>
                <node name="count2" position="-2.00,22.00" prototype="list.count"/>
                <node name="distinct1" position="-5.00,16.00" prototype="list.distinct">
                    <port name="key" type="string" value="contour"/>
                </node>
                <node name="lookup2" position="-3.00,12.00" prototype="data.lookup">
                    <port name="key" type="string" value="contour"/>
                </node>
                <node name="lookup3" position="-6.00,21.00" prototype="data.lookup">
                    <port name="key" type="string" value="row"/>
                </node>
                <node name="make_table1" position="-5.00,15.00" prototype="data.make_table">
                    <port name="headers" type="string" value="row,contour"/>
                </node>
                <node name="null1" position="-9.00,3.00" prototype="corevector.null"/>
                <node description="Returns SVG path notation string for a path" function="path_string/pathstring" name="path_string" outputType="string" position="-3.00,7.00">
                    <port description="" label="" name="path" range="value" type="geometry" widget="none"/>
                </node>
                <node name="path_table" position="-3.00,8.00" prototype="core.network" renderedChild="path_table">
                    <node name="count1" position="3.00,9.00" prototype="list.count"/>
                    <node name="make_strings3" position="1.00,6.00" prototype="string.make_strings">
                        <port name="separator" type="string" value="M"/>
                    </node>
                    <node name="path_table" position="1.00,13.00" prototype="core.network" renderedChild="make_table">
                        <node name="add1" position="-8.00,19.00" prototype="math.add"/>
                        <node name="compare1" position="-2.00,21.00" prototype="math.compare">
                            <port name="comparator" type="string" value="!="/>
                        </node>
                        <node name="contains1" position="-8.00,15.00" prototype="string.contains">
                            <port name="contains" type="string" value="C"/>
                        </node>
                        <node name="cull1" position="-3.00,25.00" prototype="list.cull"/>
                        <node name="integer1" position="-2.00,20.00" prototype="math.integer"/>
                        <node name="length1" position="-2.00,19.00" prototype="string.length"/>
                        <node name="make_strings1" position="-3.00,15.00" prototype="string.make_strings">
                            <port name="separator" type="string" value="C"/>
                        </node>
                        <node name="make_strings2" position="-3.00,14.00" prototype="string.make_strings">
                            <port name="separator" type="string" value=" "/>
                        </node>
                        <node name="make_strings4" position="-3.00,16.00" prototype="string.make_strings">
                            <port name="separator" type="string" value="L"/>
                        </node>
                        <node name="make_strings5" position="-3.00,17.00" prototype="string.make_strings">
                            <port name="separator" type="string" value="Z"/>
                        </node>
                        <node name="make_strings6" position="-8.00,14.00" prototype="string.make_strings">
                            <port name="separator" type="string" value=","/>
                        </node>
                        <node name="make_table" position="-11.00,30.00" prototype="core.network" renderedChild="zip_map1">
                            <node name="combine1" position="-8.00,25.00" prototype="list.combine"/>
                            <node name="make_strings3" position="-11.00,25.00" prototype="string.make_strings">
                                <port name="string" type="string" value="contour,type,point"/>
                                <port name="separator" type="string" value=","/>
                            </node>
                            <node name="zip_map1" position="-10.00,27.00" prototype="list.zip_map"/>
                            <port childReference="combine1.list1" description="The first list." label="" name="path" range="list" type="list" widget="none"/>
                            <port childReference="combine1.list2" description="The second list." label="" name="type" range="value" type="list" widget="none"/>
                            <port childReference="combine1.list3" description="The third list." label="" name="point" range="value" type="list" widget="none"/>
                            <conn input="zip_map1.keys" output="make_strings3"/>
                            <conn input="zip_map1.values" output="combine1"/>
                        </node>
                        <node name="null1" position="-8.00,10.00" prototype="corevector.null"/>
                        <node name="path_number" position="-19.00,25.00" prototype="math.integer"/>
                        <node name="rest1" position="-8.00,21.00" prototype="list.rest"/>
                        <node name="reverse1" position="-8.00,20.00" prototype="list.reverse"/>
                        <node name="reverse2" position="-8.00,22.00" prototype="list.reverse"/>
                        <node name="shift1" position="-7.00,17.00" prototype="list.shift">
                            <port name="amount" type="int" value="-1"/>
                        </node>
                        <node name="string1" position="-14.00,22.00" prototype="string.string">
                            <port name="value" type="string" value="P"/>
                        </node>
                        <node name="string2" position="-11.00,22.00" prototype="string.string">
                            <port name="value" type="string" value="C"/>
                        </node>
                        <node name="switch1" position="-11.00,25.00" prototype="list.switch"/>
                        <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                        <port childReference="path_number.value" description="" label="" name="path number" range="value" type="int" value="0" widget="int"/>
                        <conn input="make_strings5.string" output="make_strings4"/>
                        <conn input="make_strings1.string" output="make_strings2"/>
                        <conn input="make_strings4.string" output="make_strings1"/>
                        <conn input="length1.string" output="make_strings5"/>
                        <conn input="integer1.value" output="length1"/>
                        <conn input="compare1.value1" output="integer1"/>
                        <conn input="cull1.list" output="make_strings5"/>
                        <conn input="cull1.booleans" output="compare1"/>
                        <conn input="contains1.string" output="make_strings6"/>
                        <conn input="shift1.list" output="contains1"/>
                        <conn input="add1.value1" output="contains1"/>
                        <conn input="add1.value2" output="shift1"/>
                        <conn input="make_strings2.string" output="null1"/>
                        <conn input="make_strings6.string" output="null1"/>
                        <conn input="reverse1.list" output="add1"/>
                        <conn input="rest1.list" output="reverse1"/>
                        <conn input="reverse2.list" output="rest1"/>
                        <conn input="make_table.path" output="path_number"/>
                        <conn input="switch1.index" output="reverse2"/>
                        <conn input="switch1.input1" output="string1"/>
                        <conn input="switch1.input2" output="string2"/>
                        <conn input="make_table.type" output="switch1"/>
                        <conn input="make_table.point" output="cull1"/>
                    </node>
                    <node name="range1" position="3.00,11.00" prototype="math.range"/>
                    <node name="rest2" position="1.00,7.00" prototype="list.rest"/>
                    <port childReference="make_strings3.string" description="" label="" name="string" range="value" type="string" value="Alpha;Beta;Gamma" widget="string"/>
                    <conn input="rest2.list" output="make_strings3"/>
                    <conn input="path_table.shape" output="rest2"/>
                    <conn input="count1.list" output="rest2"/>
                    <conn input="range1.end" output="count1"/>
                    <conn input="path_table.path number" output="range1"/>
                </node>
                <node name="point2" position="-9.00,18.00" prototype="corevector.point"/>
                <node name="range1" position="-6.00,12.00" prototype="math.range"/>
                <node name="rest3" position="-5.00,25.00" prototype="list.rest"/>
                <node comment="slice off each contour" name="slice_connect" position="-9.00,29.00" prototype="core.network" renderedChild="connect1">
                    <node name="connect1" position="-26.00,4.00" prototype="corevector.connect"/>
                    <node name="slice1" position="-26.00,3.00" prototype="list.slice"/>
                    <port childReference="slice1.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice1.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <port childReference="slice1.size" description="The amount of items to take from the list." label="" min="0.0" name="size" range="value" type="int" value="10" widget="int"/>
                    <conn input="connect1.points" output="slice1"/>
                </node>
                <node name="subtract1" position="-6.00,27.00" prototype="math.subtract"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="path_table.string" output="path_string"/>
                <conn input="range1.end" output="count1"/>
                <conn input="make_table1.list1" output="range1"/>
                <conn input="make_table1.list2" output="lookup2"/>
                <conn input="distinct1.list" output="make_table1"/>
                <conn input="lookup3.list" output="distinct1"/>
                <conn input="combine3.list2" output="count2"/>
                <conn input="rest3.list" output="combine3"/>
                <conn input="subtract1.value1" output="rest3"/>
                <conn input="slice_connect.size" output="subtract1"/>
                <conn input="count2.list" output="point2"/>
                <conn input="combine3.list1" output="lookup3"/>
                <conn input="subtract1.value2" output="lookup3"/>
                <conn input="slice_connect.start_index" output="lookup3"/>
                <conn input="path_string.path" output="null1"/>
                <conn input="point2.value" output="null1"/>
                <conn input="lookup2.list" output="path_table"/>
                <conn input="count1.list" output="path_table"/>
                <conn input="slice_connect.list" output="point2"/>
            </node>
            <node name="cull1" position="1.00,8.00" prototype="list.cull"/>
            <port childReference="compound2.shape1" description="The first shape." label="" name="boundary" range="value" type="geometry" widget="none"/>
            <port childReference="compound2.shape2" description="The second shape." label="" name="pattern" range="value" type="geometry" widget="none"/>
            <conn input="contours.shape" output="compound2"/>
            <conn input="area.shape" output="contours"/>
            <conn input="compare1.value1" output="area"/>
            <conn input="cull1.list" output="contours"/>
            <conn input="cull1.booleans" output="compare1"/>
            <conn input="clean.shape" output="cull1"/>
        </node>
        <node name="frame1" position="15.00,12.00" prototype="core.frame"/>
        <node name="frame2" position="25.00,10.00" prototype="core.frame"/>
        <node name="frame3" position="43.00,6.00" prototype="core.frame"/>
        <node name="frame4" position="72.00,6.00" prototype="core.frame"/>
        <node name="frame5" position="59.00,8.00" prototype="core.frame"/>
        <node name="frame6" position="95.00,8.00" prototype="core.frame"/>
        <node name="group1" position="84.00,2.00" prototype="corevector.group"/>
        <node name="import_svg1" position="46.00,8.00" prototype="corevector.import_svg">
            <port name="file" type="string" value="checkmark.svg"/>
        </node>
        <node name="import_svg2" position="53.00,-3.00" prototype="corevector.import_svg">
            <port name="file" type="string" value="sole.svg"/>
        </node>
        <node name="limit2" position="25.00,13.00" prototype="core.network" renderedChild="switch2">
            <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
            <node name="compare2" position="15.00,13.00" prototype="math.compare">
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="maxValue" position="15.00,9.00" prototype="math.number">
                <port name="value" type="float" value="20.0"/>
            </node>
            <node name="number1" position="8.00,7.00" prototype="math.number">
                <port name="value" type="float" value="457.0"/>
            </node>
            <node name="number2" position="9.00,9.00" prototype="math.number"/>
            <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
            <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
            <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
            <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="20.0" widget="float"/>
            <conn input="switch1.input1" output="number1"/>
            <conn input="compare1.value1" output="number1"/>
            <conn input="switch1.index" output="compare1"/>
            <conn input="switch1.input2" output="number2"/>
            <conn input="switch2.index" output="compare2"/>
            <conn input="compare2.value2" output="maxValue"/>
            <conn input="compare2.value1" output="switch1"/>
            <conn input="switch2.input2" output="maxValue"/>
            <conn input="switch2.input1" output="switch1"/>
        </node>
        <node name="limit3" position="72.00,7.00" prototype="core.network" renderedChild="switch2">
            <node name="compare1" position="12.00,9.00" prototype="math.compare"/>
            <node name="compare2" position="15.00,13.00" prototype="math.compare">
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="maxValue" position="15.00,9.00" prototype="math.number">
                <port name="value" type="float" value="120.0"/>
            </node>
            <node name="number1" position="8.00,7.00" prototype="math.number">
                <port name="value" type="float" value="457.0"/>
            </node>
            <node name="number2" position="9.00,9.00" prototype="math.number"/>
            <node name="switch1" position="8.00,11.00" prototype="list.switch"/>
            <node name="switch2" position="12.00,15.00" prototype="list.switch"/>
            <port childReference="number1.value" description="" label="" name="value" range="value" type="float" value="457.0" widget="float"/>
            <port childReference="maxValue.value" description="" label="" name="max value" range="value" type="float" value="120.0" widget="float"/>
            <conn input="switch1.input1" output="number1"/>
            <conn input="compare1.value1" output="number1"/>
            <conn input="switch1.index" output="compare1"/>
            <conn input="switch1.input2" output="number2"/>
            <conn input="switch2.index" output="compare2"/>
            <conn input="compare2.value2" output="maxValue"/>
            <conn input="compare2.value1" output="switch1"/>
            <conn input="switch2.input2" output="maxValue"/>
            <conn input="switch2.input1" output="switch1"/>
        </node>
        <node name="line1" position="66.00,7.00" prototype="corevector.line">
            <port name="point1" type="point" value="-200.00,-165.00"/>
            <port name="point2" type="point" value="200.00,-165.00"/>
        </node>
        <node name="line2" position="69.00,7.00" prototype="corevector.line">
            <port name="point1" type="point" value="-200.00,-165.00"/>
            <port name="point2" type="point" value="-200.00,235.00"/>
        </node>
        <node name="line_angle1" position="66.00,10.00" prototype="corevector.line_angle">
            <port name="angle" type="float" value="90.0"/>
            <port name="distance" type="float" value="400.0"/>
        </node>
        <node name="line_angle2" position="69.00,10.00" prototype="corevector.line_angle">
            <port name="distance" type="float" value="400.0"/>
        </node>
        <node name="piece" position="83.00,8.00" prototype="core.network" renderedChild="combine10">
            <node name="centroid1" position="81.00,0.00" prototype="corevector.centroid"/>
            <node name="colorize22" position="81.00,5.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#ffffffff"/>
            </node>
            <node name="combine10" position="81.00,9.00" prototype="list.combine"/>
            <node name="slice3" position="80.00,-2.00" prototype="list.slice">
                <port name="size" type="int" value="1"/>
            </node>
            <node name="textpath9" position="81.00,4.00" prototype="corevector.textpath">
                <port name="text" type="string" value="AB"/>
                <port name="font_name" type="string" value="GillSans"/>
            </node>
            <node name="translate7" position="82.00,7.00" prototype="corevector.translate">
                <port name="translate" type="point" value="0.00,11.00"/>
            </node>
            <port childReference="slice3.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
            <port childReference="slice3.start_index" description="The starting index in the list." label="" min="0.0" name="index" range="value" type="int" value="0" widget="int"/>
            <port childReference="textpath9.text" description="The input text." label="" name="label" range="value" type="string" value="AB" widget="string"/>
            <port childReference="translate7.translate" description="The amount of translation." label="" name="offset" range="value" type="point" value="0.00,11.00" widget="point"/>
            <conn input="centroid1.shape" output="slice3"/>
            <conn input="textpath9.position" output="centroid1"/>
            <conn input="colorize22.shape" output="textpath9"/>
            <conn input="translate7.shape" output="colorize22"/>
            <conn input="combine10.list1" output="slice3"/>
            <conn input="combine10.list2" output="translate7"/>
        </node>
        <node name="piece1" position="92.00,8.00" prototype="core.network" renderedChild="combine10">
            <node name="centroid1" position="81.00,0.00" prototype="corevector.centroid"/>
            <node name="colorize22" position="81.00,5.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#ffffffff"/>
            </node>
            <node name="combine10" position="81.00,9.00" prototype="list.combine"/>
            <node name="slice3" position="80.00,-2.00" prototype="list.slice">
                <port name="start_index" type="int" value="1"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="textpath9" position="81.00,4.00" prototype="corevector.textpath">
                <port name="text" type="string" value="ABC"/>
                <port name="font_name" type="string" value="GillSans"/>
            </node>
            <node name="translate7" position="82.00,7.00" prototype="corevector.translate">
                <port name="translate" type="point" value="0.00,-4.00"/>
            </node>
            <port childReference="slice3.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
            <port childReference="slice3.start_index" description="The starting index in the list." label="" min="0.0" name="index" range="value" type="int" value="1" widget="int"/>
            <port childReference="textpath9.text" description="The input text." label="" name="label" range="value" type="string" value="ABC" widget="string"/>
            <port childReference="translate7.translate" description="The amount of translation." label="" name="offset" range="value" type="point" value="0.00,-4.00" widget="point"/>
            <conn input="centroid1.shape" output="slice3"/>
            <conn input="textpath9.position" output="centroid1"/>
            <conn input="colorize22.shape" output="textpath9"/>
            <conn input="translate7.shape" output="colorize22"/>
            <conn input="combine10.list1" output="slice3"/>
            <conn input="combine10.list2" output="translate7"/>
        </node>
        <node name="piece2" position="86.00,8.00" prototype="core.network" renderedChild="combine10">
            <node name="centroid1" position="81.00,0.00" prototype="corevector.centroid"/>
            <node name="colorize22" position="81.00,5.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#ffffffff"/>
            </node>
            <node name="combine10" position="81.00,9.00" prototype="list.combine"/>
            <node name="slice3" position="80.00,-2.00" prototype="list.slice">
                <port name="start_index" type="int" value="4"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="textpath9" position="81.00,4.00" prototype="corevector.textpath">
                <port name="text" type="string" value="AC"/>
                <port name="font_name" type="string" value="GillSans"/>
            </node>
            <node name="translate7" position="82.00,7.00" prototype="corevector.translate">
                <port name="translate" type="point" value="-8.00,19.00"/>
            </node>
            <port childReference="slice3.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
            <port childReference="slice3.start_index" description="The starting index in the list." label="" min="0.0" name="index" range="value" type="int" value="4" widget="int"/>
            <port childReference="textpath9.text" description="The input text." label="" name="label" range="value" type="string" value="AC" widget="string"/>
            <port childReference="translate7.translate" description="The amount of translation." label="" name="offset" range="value" type="point" value="-8.00,19.00" widget="point"/>
            <conn input="centroid1.shape" output="slice3"/>
            <conn input="textpath9.position" output="centroid1"/>
            <conn input="colorize22.shape" output="textpath9"/>
            <conn input="translate7.shape" output="colorize22"/>
            <conn input="combine10.list1" output="slice3"/>
            <conn input="combine10.list2" output="translate7"/>
        </node>
        <node name="piece3" position="89.00,8.00" prototype="core.network" renderedChild="combine10">
            <node name="centroid1" position="81.00,0.00" prototype="corevector.centroid"/>
            <node name="colorize22" position="81.00,5.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#ffffffff"/>
            </node>
            <node name="combine10" position="81.00,9.00" prototype="list.combine"/>
            <node name="slice3" position="80.00,-2.00" prototype="list.slice">
                <port name="start_index" type="int" value="5"/>
                <port name="size" type="int" value="1"/>
            </node>
            <node name="textpath9" position="81.00,4.00" prototype="corevector.textpath">
                <port name="text" type="string" value="BC"/>
                <port name="font_name" type="string" value="GillSans"/>
            </node>
            <node name="translate7" position="82.00,7.00" prototype="corevector.translate">
                <port name="translate" type="point" value="7.00,18.00"/>
            </node>
            <port childReference="slice3.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
            <port childReference="slice3.start_index" description="The starting index in the list." label="" min="0.0" name="index" range="value" type="int" value="5" widget="int"/>
            <port childReference="textpath9.text" description="The input text." label="" name="label" range="value" type="string" value="BC" widget="string"/>
            <port childReference="translate7.translate" description="The amount of translation." label="" name="offset" range="value" type="point" value="7.00,18.00" widget="point"/>
            <conn input="centroid1.shape" output="slice3"/>
            <conn input="textpath9.position" output="centroid1"/>
            <conn input="colorize22.shape" output="textpath9"/>
            <conn input="translate7.shape" output="colorize22"/>
            <conn input="combine10.list1" output="slice3"/>
            <conn input="combine10.list2" output="translate7"/>
        </node>
        <node name="point1" position="12.00,8.00" prototype="corevector.point"/>
        <node name="point2" position="56.00,4.00" prototype="corevector.point"/>
        <node name="polygon1" position="22.00,13.00" prototype="corevector.polygon">
            <port name="position" type="point" value="0.00,71.00"/>
            <port name="radius" type="float" value="150.0"/>
            <port name="align" type="boolean" value="true"/>
        </node>
        <node name="rect1" position="5.00,15.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect10" position="79.00,15.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect11" position="78.00,0.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect2" position="12.00,0.00" prototype="corevector.rect">
            <port name="position" type="point" value="-13.00,40.00"/>
            <port name="width" type="float" value="450.0"/>
            <port name="height" type="float" value="350.0"/>
        </node>
        <node name="rect3" position="19.00,15.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect4" position="30.00,9.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect5" position="33.00,-2.00" prototype="corevector.rect">
            <port name="position" type="point" value="-123.00,16.00"/>
            <port name="width" type="float" value="175.0"/>
            <port name="height" type="float" value="328.0"/>
        </node>
        <node name="rect6" position="36.00,-2.00" prototype="corevector.rect">
            <port name="position" type="point" value="139.00,40.00"/>
            <port name="width" type="float" value="195.0"/>
            <port name="height" type="float" value="303.0"/>
        </node>
        <node name="rect7" position="50.00,15.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect8" position="63.00,15.00" prototype="corevector.rect">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="rect9" position="72.00,12.00" prototype="corevector.rect">
            <port name="position" type="point" value="0.00,35.00"/>
            <port name="width" type="float" value="138.0"/>
            <port name="height" type="float" value="138.0"/>
        </node>
        <node name="resample1" position="12.00,7.00" prototype="corevector.resample">
            <port name="method" type="string" value="amount"/>
            <port name="length" type="float" value="5.0"/>
            <port name="points" type="int" value="120"/>
        </node>
        <node name="resample2" position="56.00,3.00" prototype="corevector.resample">
            <port name="method" type="string" value="amount"/>
            <port name="length" type="float" value="5.0"/>
            <port name="points" type="int" value="119"/>
        </node>
        <node name="reveal" position="83.00,11.00" prototype="core.network" renderedChild="switch2">
            <node name="compare2" position="95.00,10.00" prototype="math.compare">
                <port name="value2" type="float" value="30.0"/>
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="switch2" position="92.00,13.00" prototype="list.switch"/>
            <port childReference="switch2.input2" description="The second list." label="" name="input2" range="list" type="list" widget="none"/>
            <port childReference="compare2.value1" description="" label="" name="frame" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="compare2.value2" description="" label="" name="time" range="value" type="float" value="30.0" widget="float"/>
            <conn input="switch2.index" output="compare2"/>
        </node>
        <node name="reveal1" position="86.00,11.00" prototype="core.network" renderedChild="switch2">
            <node name="compare2" position="95.00,10.00" prototype="math.compare">
                <port name="value2" type="float" value="60.0"/>
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="switch2" position="92.00,13.00" prototype="list.switch"/>
            <port childReference="switch2.input2" description="The second list." label="" name="input2" range="list" type="list" widget="none"/>
            <port childReference="compare2.value1" description="" label="" name="frame" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="compare2.value2" description="" label="" name="time" range="value" type="float" value="60.0" widget="float"/>
            <conn input="switch2.index" output="compare2"/>
        </node>
        <node name="reveal2" position="89.00,11.00" prototype="core.network" renderedChild="switch2">
            <node name="compare2" position="95.00,10.00" prototype="math.compare">
                <port name="value2" type="float" value="90.0"/>
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="switch2" position="92.00,13.00" prototype="list.switch"/>
            <port childReference="switch2.input2" description="The second list." label="" name="input2" range="list" type="list" widget="none"/>
            <port childReference="compare2.value1" description="" label="" name="frame" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="compare2.value2" description="" label="" name="time" range="value" type="float" value="90.0" widget="float"/>
            <conn input="switch2.index" output="compare2"/>
        </node>
        <node name="reveal3" position="92.00,11.00" prototype="core.network" renderedChild="switch2">
            <node name="compare2" position="95.00,10.00" prototype="math.compare">
                <port name="value2" type="float" value="119.0"/>
                <port name="comparator" type="string" value="&gt;"/>
            </node>
            <node name="switch2" position="92.00,13.00" prototype="list.switch"/>
            <port childReference="switch2.input2" description="The second list." label="" name="input2" range="list" type="list" widget="none"/>
            <port childReference="compare2.value1" description="" label="" name="frame" range="value" type="float" value="0.0" widget="float"/>
            <port childReference="compare2.value2" description="" label="" name="time" range="value" type="float" value="119.0" widget="float"/>
            <conn input="switch2.index" output="compare2"/>
        </node>
        <node name="ring" position="82.00,-3.00" prototype="core.network" renderedChild="compound1">
            <node name="compound1" position="78.00,9.00" prototype="corevector.compound">
                <port name="function" type="string" value="subtracted"/>
            </node>
            <node name="ellipse2" position="78.00,7.00" prototype="corevector.ellipse"/>
            <node name="ellipse3" position="82.00,7.00" prototype="corevector.ellipse"/>
            <node name="point1" position="76.00,3.00" prototype="corevector.point">
                <port name="value" type="point" value="-99.00,0.00"/>
            </node>
            <node name="radius" position="79.00,3.00" prototype="math.number">
                <port name="value" type="float" value="275.0"/>
            </node>
            <node name="subtract2" position="82.00,5.00" prototype="math.subtract">
                <port name="value2" type="float" value="5.0"/>
            </node>
            <port childReference="radius.value" description="" label="" name="radius" range="value" type="float" value="275.0" widget="float"/>
            <port childReference="point1.value" description="The input point." label="" name="position" range="value" type="point" value="-99.00,0.00" widget="point"/>
            <conn input="ellipse2.width" output="radius"/>
            <conn input="ellipse2.height" output="radius"/>
            <conn input="subtract2.value1" output="radius"/>
            <conn input="ellipse3.width" output="subtract2"/>
            <conn input="ellipse3.height" output="subtract2"/>
            <conn input="compound1.shape1" output="ellipse2"/>
            <conn input="compound1.shape2" output="ellipse3"/>
            <conn input="ellipse2.position" output="point1"/>
            <conn input="ellipse3.position" output="point1"/>
        </node>
        <node name="ring1" position="85.00,-3.00" prototype="core.network" renderedChild="compound1">
            <node name="compound1" position="78.00,9.00" prototype="corevector.compound">
                <port name="function" type="string" value="subtracted"/>
            </node>
            <node name="ellipse2" position="78.00,7.00" prototype="corevector.ellipse"/>
            <node name="ellipse3" position="82.00,7.00" prototype="corevector.ellipse"/>
            <node name="point1" position="76.00,3.00" prototype="corevector.point">
                <port name="value" type="point" value="101.00,0.00"/>
            </node>
            <node name="radius" position="79.00,3.00" prototype="math.number">
                <port name="value" type="float" value="275.0"/>
            </node>
            <node name="subtract2" position="82.00,5.00" prototype="math.subtract">
                <port name="value2" type="float" value="5.0"/>
            </node>
            <port childReference="radius.value" description="" label="" name="radius" range="value" type="float" value="275.0" widget="float"/>
            <port childReference="point1.value" description="The input point." label="" name="position" range="value" type="point" value="101.00,0.00" widget="point"/>
            <conn input="ellipse2.width" output="radius"/>
            <conn input="ellipse2.height" output="radius"/>
            <conn input="subtract2.value1" output="radius"/>
            <conn input="ellipse3.width" output="subtract2"/>
            <conn input="ellipse3.height" output="subtract2"/>
            <conn input="compound1.shape1" output="ellipse2"/>
            <conn input="compound1.shape2" output="ellipse3"/>
            <conn input="ellipse2.position" output="point1"/>
            <conn input="ellipse3.position" output="point1"/>
        </node>
        <node name="ring2" position="88.00,-3.00" prototype="core.network" renderedChild="compound1">
            <node name="compound1" position="78.00,9.00" prototype="corevector.compound">
                <port name="function" type="string" value="subtracted"/>
            </node>
            <node name="ellipse2" position="78.00,7.00" prototype="corevector.ellipse"/>
            <node name="ellipse3" position="82.00,7.00" prototype="corevector.ellipse"/>
            <node name="point1" position="76.00,3.00" prototype="corevector.point">
                <port name="value" type="point" value="15.00,98.00"/>
            </node>
            <node name="radius" position="79.00,3.00" prototype="math.number">
                <port name="value" type="float" value="275.0"/>
            </node>
            <node name="subtract2" position="82.00,5.00" prototype="math.subtract">
                <port name="value2" type="float" value="5.0"/>
            </node>
            <port childReference="radius.value" description="" label="" name="radius" range="value" type="float" value="275.0" widget="float"/>
            <port childReference="point1.value" description="The input point." label="" name="position" range="value" type="point" value="15.00,98.00" widget="point"/>
            <conn input="ellipse2.width" output="radius"/>
            <conn input="ellipse2.height" output="radius"/>
            <conn input="subtract2.value1" output="radius"/>
            <conn input="ellipse3.width" output="subtract2"/>
            <conn input="ellipse3.height" output="subtract2"/>
            <conn input="compound1.shape1" output="ellipse2"/>
            <conn input="compound1.shape2" output="ellipse3"/>
            <conn input="ellipse2.position" output="point1"/>
            <conn input="ellipse3.position" output="point1"/>
        </node>
        <node name="scale1" position="12.00,5.00" prototype="corevector.scale">
            <port name="scale" type="point" value="130.00,120.00"/>
        </node>
        <node name="scale2" position="46.00,9.00" prototype="corevector.scale">
            <port name="scale" type="point" value="30.00,30.00"/>
            <port name="origin" type="point" value="-163.00,0.00"/>
        </node>
        <node name="scale3" position="53.00,-2.00" prototype="corevector.scale">
            <port name="scale" type="point" value="23.00,23.00"/>
            <port name="origin" type="point" value="0.00,49.00"/>
        </node>
        <node name="scatter1" position="12.00,1.00" prototype="corevector.scatter"/>
        <node name="scatter2" position="33.00,-1.00" prototype="corevector.scatter">
            <port name="amount" type="int" value="27"/>
        </node>
        <node name="scatter3" position="36.00,-1.00" prototype="corevector.scatter">
            <port name="amount" type="int" value="30"/>
            <port name="seed" type="int" value="8"/>
        </node>
        <node comment="seperates shape into outer ridge (first) and inside (second)" name="seperate" position="55.00,1.00" prototype="core.network" renderedChild="clean2">
            <node name="add1" position="-16.00,-8.00" prototype="math.add">
                <port name="value2" type="float" value="1.0"/>
            </node>
            <node comment="removes duplicate points" name="clean1" position="-19.00,-1.00" prototype="core.network" renderedChild="connect1">
                <node name="boolean1" position="10.00,20.00" prototype="math.boolean"/>
                <node comment="item matches previous" name="combine1" position="10.00,23.00" prototype="list.combine"/>
                <node comment="item is type 1" name="combine2" position="7.00,23.00" prototype="list.combine"/>
                <node name="compare1" position="7.00,19.00" prototype="math.compare">
                    <port name="value2" type="float" value="1.0"/>
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare2" position="10.00,26.00" prototype="math.compare">
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare3" position="13.00,21.00" prototype="math.compare">
                    <port name="value2" type="float" value="0.01"/>
                </node>
                <node name="connect1" position="16.00,29.00" prototype="corevector.connect"/>
                <node name="cull1" position="16.00,28.00" prototype="list.cull"/>
                <node name="distance1" position="13.00,20.00" prototype="math.distance"/>
                <node name="lookup1" position="7.00,17.00" prototype="data.lookup">
                    <port name="key" type="string" value="type"/>
                </node>
                <node name="multiply1" position="10.00,25.00" prototype="math.multiply"/>
                <node name="null1" position="16.00,11.00" prototype="corevector.null"/>
                <node name="number1" position="7.00,18.00" prototype="math.number"/>
                <node name="point1" position="16.00,13.00" prototype="corevector.point"/>
                <node name="rest1" position="10.00,17.00" prototype="list.rest"/>
                <node name="rest2" position="13.00,16.00" prototype="list.rest"/>
                <node name="rest3" position="7.00,16.00" prototype="list.rest"/>
                <node name="reverse1" position="10.00,16.00" prototype="list.reverse"/>
                <node name="reverse2" position="10.00,18.00" prototype="list.reverse"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="reverse1.list" output="point1"/>
                <conn input="rest1.list" output="reverse1"/>
                <conn input="reverse2.list" output="rest1"/>
                <conn input="rest2.list" output="point1"/>
                <conn input="cull1.list" output="point1"/>
                <conn input="connect1.points" output="cull1"/>
                <conn input="number1.value" output="lookup1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="point1.value" output="null1"/>
                <conn input="combine1.list1" output="boolean1"/>
                <conn input="rest3.list" output="point1"/>
                <conn input="lookup1.list" output="rest3"/>
                <conn input="multiply1.value1" output="combine2"/>
                <conn input="multiply1.value2" output="combine1"/>
                <conn input="combine2.list1" output="boolean1"/>
                <conn input="combine2.list2" output="compare1"/>
                <conn input="compare2.value1" output="multiply1"/>
                <conn input="cull1.booleans" output="compare2"/>
                <conn input="distance1.point1" output="reverse2"/>
                <conn input="distance1.point2" output="rest2"/>
                <conn input="compare3.value1" output="distance1"/>
                <conn input="combine1.list2" output="compare3"/>
            </node>
            <node comment="removes duplicate points" name="clean2" position="-22.00,-1.00" prototype="core.network" renderedChild="connect1">
                <node name="boolean1" position="10.00,20.00" prototype="math.boolean"/>
                <node comment="item matches previous" name="combine1" position="10.00,23.00" prototype="list.combine"/>
                <node comment="item is type 1" name="combine2" position="7.00,23.00" prototype="list.combine"/>
                <node name="compare1" position="7.00,19.00" prototype="math.compare">
                    <port name="value2" type="float" value="1.0"/>
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare2" position="10.00,26.00" prototype="math.compare">
                    <port name="comparator" type="string" value="=="/>
                </node>
                <node name="compare3" position="13.00,21.00" prototype="math.compare">
                    <port name="value2" type="float" value="0.01"/>
                </node>
                <node name="connect1" position="16.00,29.00" prototype="corevector.connect"/>
                <node name="cull1" position="16.00,28.00" prototype="list.cull"/>
                <node name="distance1" position="13.00,20.00" prototype="math.distance"/>
                <node name="lookup1" position="7.00,17.00" prototype="data.lookup">
                    <port name="key" type="string" value="type"/>
                </node>
                <node name="multiply1" position="10.00,25.00" prototype="math.multiply"/>
                <node name="null1" position="16.00,11.00" prototype="corevector.null"/>
                <node name="number1" position="7.00,18.00" prototype="math.number"/>
                <node name="point1" position="16.00,13.00" prototype="corevector.point"/>
                <node name="rest1" position="10.00,17.00" prototype="list.rest"/>
                <node name="rest2" position="13.00,16.00" prototype="list.rest"/>
                <node name="rest3" position="7.00,16.00" prototype="list.rest"/>
                <node name="reverse1" position="10.00,16.00" prototype="list.reverse"/>
                <node name="reverse2" position="10.00,18.00" prototype="list.reverse"/>
                <port childReference="null1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                <conn input="reverse1.list" output="point1"/>
                <conn input="rest1.list" output="reverse1"/>
                <conn input="reverse2.list" output="rest1"/>
                <conn input="rest2.list" output="point1"/>
                <conn input="cull1.list" output="point1"/>
                <conn input="connect1.points" output="cull1"/>
                <conn input="number1.value" output="lookup1"/>
                <conn input="compare1.value1" output="number1"/>
                <conn input="point1.value" output="null1"/>
                <conn input="combine1.list1" output="boolean1"/>
                <conn input="rest3.list" output="point1"/>
                <conn input="lookup1.list" output="rest3"/>
                <conn input="multiply1.value1" output="combine2"/>
                <conn input="multiply1.value2" output="combine1"/>
                <conn input="combine2.list1" output="boolean1"/>
                <conn input="combine2.list2" output="compare1"/>
                <conn input="compare2.value1" output="multiply1"/>
                <conn input="cull1.booleans" output="compare2"/>
                <conn input="distance1.point1" output="reverse2"/>
                <conn input="distance1.point2" output="rest2"/>
                <conn input="compare3.value1" output="distance1"/>
                <conn input="combine1.list2" output="compare3"/>
            </node>
            <node name="colorize5" position="-22.00,4.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#aaaaaaff"/>
            </node>
            <node name="colorize7" position="-19.00,4.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#373737ff"/>
            </node>
            <node name="combine5" position="-22.00,6.00" prototype="list.combine"/>
            <node name="compound1" position="-26.00,2.00" prototype="corevector.compound">
                <port name="function" type="string" value="subtracted"/>
            </node>
            <node name="curviness" position="-25.00,-4.00" prototype="math.number">
                <port name="value" type="float" value="30.0"/>
            </node>
            <node name="divide1" position="-16.00,-9.00" prototype="math.divide">
                <port name="value2" type="float" value="100.0"/>
            </node>
            <node comment="finds a curve that passes through all points in a path" name="fit_curve2" position="-19.00,-2.00" prototype="core.network" renderedChild="switch1">
                <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
                <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                    <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                        <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                        <node name="P0" position="88.00,-8.00" prototype="list.slice">
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P1" position="96.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="1"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P2" position="102.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="2"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="add2" position="89.00,7.00" prototype="math.add">
                            <port name="value2" type="float" value="180.0"/>
                        </node>
                        <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                        <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                        <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                        <node name="curviness" position="84.00,1.00" prototype="math.number">
                            <port name="value" type="float" value="0.25"/>
                        </node>
                        <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                        <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                        <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                        <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                        <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                        <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                        <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                        <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                        <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                        <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                        <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                        <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                        <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                        <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                        <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                        <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                        <conn input="lookup9.list" output="line7"/>
                        <conn input="line_angle8.angle" output="angle3"/>
                        <conn input="line_angle8.distance" output="lookup9"/>
                        <conn input="point11.value" output="line_angle8"/>
                        <conn input="second8.list" output="point11"/>
                        <conn input="angle4.point1" output="second8"/>
                        <conn input="line_angle7.angle" output="angle4"/>
                        <conn input="point12.value" output="line_angle7"/>
                        <conn input="multiply3.value1" output="lookup9"/>
                        <conn input="line_angle7.distance" output="multiply3"/>
                        <conn input="second7.list" output="point12"/>
                        <conn input="add2.value1" output="angle4"/>
                        <conn input="line_angle6.angle" output="add2"/>
                        <conn input="second6.list" output="point13"/>
                        <conn input="point13.value" output="line_angle6"/>
                        <conn input="lookup10.list" output="line6"/>
                        <conn input="multiply4.value2" output="lookup10"/>
                        <conn input="line_angle6.distance" output="multiply4"/>
                        <conn input="combine7.list3" output="second6"/>
                        <conn input="combine7.list4" output="second7"/>
                        <conn input="P0.list" output="null3"/>
                        <conn input="angle3.point2" output="P0"/>
                        <conn input="line6.point1" output="P0"/>
                        <conn input="P1.list" output="null3"/>
                        <conn input="line7.point1" output="P1"/>
                        <conn input="angle3.point1" output="P1"/>
                        <conn input="line_angle8.position" output="P1"/>
                        <conn input="line_angle7.position" output="P1"/>
                        <conn input="line_angle6.position" output="P1"/>
                        <conn input="line6.point2" output="P1"/>
                        <conn input="P2.list" output="null3"/>
                        <conn input="line7.point2" output="P2"/>
                        <conn input="angle4.point2" output="P2"/>
                        <conn input="multiply3.value2" output="curviness"/>
                        <conn input="multiply4.value1" output="curviness"/>
                    </node>
                    <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                        <port name="size" type="int" value="3"/>
                    </node>
                    <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <conn input="find_controls.shape" output="slice7"/>
                </node>
                <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                    <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                        <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                        <node name="P0" position="88.00,-8.00" prototype="list.slice">
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P1" position="96.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="1"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P2" position="102.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="2"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="add2" position="89.00,7.00" prototype="math.add">
                            <port name="value2" type="float" value="180.0"/>
                        </node>
                        <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                        <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                        <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                        <node name="curviness" position="84.00,1.00" prototype="math.number">
                            <port name="value" type="float" value="0.25"/>
                        </node>
                        <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                        <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                        <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                        <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                        <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                        <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                        <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                        <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                        <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                        <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                        <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                        <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                        <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                        <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                        <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                        <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                        <conn input="lookup9.list" output="line7"/>
                        <conn input="line_angle8.angle" output="angle3"/>
                        <conn input="line_angle8.distance" output="lookup9"/>
                        <conn input="point11.value" output="line_angle8"/>
                        <conn input="second8.list" output="point11"/>
                        <conn input="angle4.point1" output="second8"/>
                        <conn input="line_angle7.angle" output="angle4"/>
                        <conn input="point12.value" output="line_angle7"/>
                        <conn input="multiply3.value1" output="lookup9"/>
                        <conn input="line_angle7.distance" output="multiply3"/>
                        <conn input="second7.list" output="point12"/>
                        <conn input="add2.value1" output="angle4"/>
                        <conn input="line_angle6.angle" output="add2"/>
                        <conn input="second6.list" output="point13"/>
                        <conn input="point13.value" output="line_angle6"/>
                        <conn input="lookup10.list" output="line6"/>
                        <conn input="multiply4.value2" output="lookup10"/>
                        <conn input="line_angle6.distance" output="multiply4"/>
                        <conn input="combine7.list3" output="second6"/>
                        <conn input="combine7.list4" output="second7"/>
                        <conn input="P0.list" output="null3"/>
                        <conn input="angle3.point2" output="P0"/>
                        <conn input="line6.point1" output="P0"/>
                        <conn input="P1.list" output="null3"/>
                        <conn input="line7.point1" output="P1"/>
                        <conn input="angle3.point1" output="P1"/>
                        <conn input="line_angle8.position" output="P1"/>
                        <conn input="line_angle7.position" output="P1"/>
                        <conn input="line_angle6.position" output="P1"/>
                        <conn input="line6.point2" output="P1"/>
                        <conn input="P2.list" output="null3"/>
                        <conn input="line7.point2" output="P2"/>
                        <conn input="angle4.point2" output="P2"/>
                        <conn input="multiply3.value2" output="curviness"/>
                        <conn input="multiply4.value1" output="curviness"/>
                    </node>
                    <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                        <port name="size" type="int" value="3"/>
                    </node>
                    <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <conn input="find_controls.shape" output="slice7"/>
                </node>
                <node name="closed" position="94.00,6.00" prototype="math.boolean">
                    <port name="value" type="boolean" value="true"/>
                </node>
                <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
                <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
                <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
                <node name="count2" position="87.00,-12.00" prototype="list.count"/>
                <node name="count3" position="105.00,-12.00" prototype="list.count"/>
                <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                    <port name="value1" type="float" value="30.0"/>
                    <port name="value2" type="float" value="100.0"/>
                </node>
                <node name="first1" position="73.00,-3.00" prototype="list.first"/>
                <node name="first2" position="79.00,-3.00" prototype="list.first"/>
                <node name="last1" position="88.00,-3.00" prototype="list.last"/>
                <node name="last2" position="94.00,-3.00" prototype="list.last"/>
                <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                    <node name="add1" position="86.00,3.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                    <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                        <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                        <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                        <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                        <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                    </node>
                    <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                        <port name="value2" type="float" value="2.0"/>
                    </node>
                    <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                    <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                    <node name="slice1" position="92.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice2" position="95.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice3" position="82.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice4" position="85.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                    <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                    <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="multiply1.value1" output="number1"/>
                    <conn input="add1.value1" output="number1"/>
                    <conn input="slice1.list" output="controls"/>
                    <conn input="slice2.list" output="controls"/>
                    <conn input="slice3.start_index" output="number1"/>
                    <conn input="slice4.start_index" output="add1"/>
                    <conn input="slice3.list" output="points"/>
                    <conn input="slice4.list" output="points"/>
                    <conn input="make_curve6.pt1" output="slice3"/>
                    <conn input="make_curve6.pt2" output="slice4"/>
                    <conn input="make_curve6.c1" output="slice1"/>
                    <conn input="make_curve6.c2" output="slice2"/>
                    <conn input="subtract1.value1" output="multiply1"/>
                    <conn input="slice1.start_index" output="subtract1"/>
                    <conn input="slice2.start_index" output="multiply1"/>
                </node>
                <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                    <node name="add1" position="86.00,3.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                    <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                        <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                        <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                        <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                        <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                    </node>
                    <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                        <port name="value2" type="float" value="2.0"/>
                    </node>
                    <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                    <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                    <node name="slice1" position="92.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice2" position="95.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice3" position="82.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice4" position="85.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                    <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                    <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="multiply1.value1" output="number1"/>
                    <conn input="add1.value1" output="number1"/>
                    <conn input="slice1.list" output="controls"/>
                    <conn input="slice2.list" output="controls"/>
                    <conn input="slice3.start_index" output="number1"/>
                    <conn input="slice4.start_index" output="add1"/>
                    <conn input="slice3.list" output="points"/>
                    <conn input="slice4.list" output="points"/>
                    <conn input="make_curve6.pt1" output="slice3"/>
                    <conn input="make_curve6.pt2" output="slice4"/>
                    <conn input="make_curve6.c1" output="slice1"/>
                    <conn input="make_curve6.c2" output="slice2"/>
                    <conn input="subtract1.value1" output="multiply1"/>
                    <conn input="slice1.start_index" output="subtract1"/>
                    <conn input="slice2.start_index" output="multiply1"/>
                </node>
                <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
                <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
                <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
                <node name="range2" position="82.00,-9.00" prototype="math.range"/>
                <node name="range3" position="86.00,-6.00" prototype="math.range">
                    <port name="start" type="float" value="1.0"/>
                </node>
                <node name="range4" position="105.00,-7.00" prototype="math.range">
                    <port name="start" type="float" value="1.0"/>
                </node>
                <node name="range5" position="102.00,-9.00" prototype="math.range"/>
                <node name="second6" position="76.00,-3.00" prototype="list.second"/>
                <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                    <port name="start_index" type="int" value="2"/>
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
                <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
                <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="30.0" widget="float"/>
                <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
                <conn input="count2.list" output="null2"/>
                <conn input="subtract1.value1" output="count2"/>
                <conn input="range2.end" output="subtract1"/>
                <conn input="add_pairs.list" output="null2"/>
                <conn input="add_pairs.start_index" output="range2"/>
                <conn input="first1.list" output="null2"/>
                <conn input="second6.list" output="null2"/>
                <conn input="first2.list" output="add_pairs"/>
                <conn input="make_curve5.pt1" output="first1"/>
                <conn input="make_curve5.pt2" output="second6"/>
                <conn input="make_curve5.c1" output="first1"/>
                <conn input="make_curve5.c2" output="first2"/>
                <conn input="last1.list" output="add_pairs"/>
                <conn input="last2.list" output="null2"/>
                <conn input="slice6.list" output="null2"/>
                <conn input="slice6.start_index" output="subtract1"/>
                <conn input="make_curve7.pt1" output="slice6"/>
                <conn input="make_curve7.pt2" output="last2"/>
                <conn input="make_curve7.c2" output="last2"/>
                <conn input="make_curve7.c1" output="last1"/>
                <conn input="combine7.list1" output="make_curve5"/>
                <conn input="combine7.list7" output="make_curve7"/>
                <conn input="range3.end" output="subtract1"/>
                <conn input="middle_curves.controls" output="add_pairs"/>
                <conn input="middle_curves.index" output="range3"/>
                <conn input="middle_curves.points" output="null2"/>
                <conn input="combine7.list4" output="middle_curves"/>
                <conn input="add_pairs.value" output="divide1"/>
                <conn input="combine1.list1" output="null2"/>
                <conn input="slice1.list" output="null2"/>
                <conn input="combine1.list2" output="slice1"/>
                <conn input="subtract2.value1" output="count3"/>
                <conn input="range5.end" output="subtract2"/>
                <conn input="range4.end" output="subtract2"/>
                <conn input="middle_curves1.index" output="range4"/>
                <conn input="middle_curves1.points" output="combine1"/>
                <conn input="count3.list" output="combine1"/>
                <conn input="switch1.index" output="closed"/>
                <conn input="switch1.input1" output="combine7"/>
                <conn input="null2.shape" output="point1"/>
                <conn input="add_pairs2.value" output="divide1"/>
                <conn input="add_pairs2.list" output="combine1"/>
                <conn input="add_pairs2.start_index" output="range5"/>
                <conn input="middle_curves1.controls" output="add_pairs2"/>
                <conn input="connect2.points" output="point2"/>
                <conn input="point2.value" output="middle_curves1"/>
                <conn input="switch1.input2" output="connect2"/>
            </node>
            <node comment="finds a curve that passes through all points in a path" name="fit_curve3" position="-22.00,-2.00" prototype="core.network" renderedChild="switch1">
                <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="92.00,-24.00" prototype="corevector.null"/>
                <node comment="add a pair of control points for each point in path" name="add_pairs" position="80.00,-7.00" prototype="core.network" renderedChild="find_controls">
                    <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                        <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                        <node name="P0" position="88.00,-8.00" prototype="list.slice">
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P1" position="96.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="1"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P2" position="102.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="2"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="add2" position="89.00,7.00" prototype="math.add">
                            <port name="value2" type="float" value="180.0"/>
                        </node>
                        <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                        <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                        <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                        <node name="curviness" position="84.00,1.00" prototype="math.number">
                            <port name="value" type="float" value="0.25"/>
                        </node>
                        <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                        <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                        <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                        <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                        <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                        <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                        <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                        <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                        <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                        <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                        <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                        <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                        <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                        <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                        <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                        <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                        <conn input="lookup9.list" output="line7"/>
                        <conn input="line_angle8.angle" output="angle3"/>
                        <conn input="line_angle8.distance" output="lookup9"/>
                        <conn input="point11.value" output="line_angle8"/>
                        <conn input="second8.list" output="point11"/>
                        <conn input="angle4.point1" output="second8"/>
                        <conn input="line_angle7.angle" output="angle4"/>
                        <conn input="point12.value" output="line_angle7"/>
                        <conn input="multiply3.value1" output="lookup9"/>
                        <conn input="line_angle7.distance" output="multiply3"/>
                        <conn input="second7.list" output="point12"/>
                        <conn input="add2.value1" output="angle4"/>
                        <conn input="line_angle6.angle" output="add2"/>
                        <conn input="second6.list" output="point13"/>
                        <conn input="point13.value" output="line_angle6"/>
                        <conn input="lookup10.list" output="line6"/>
                        <conn input="multiply4.value2" output="lookup10"/>
                        <conn input="line_angle6.distance" output="multiply4"/>
                        <conn input="combine7.list3" output="second6"/>
                        <conn input="combine7.list4" output="second7"/>
                        <conn input="P0.list" output="null3"/>
                        <conn input="angle3.point2" output="P0"/>
                        <conn input="line6.point1" output="P0"/>
                        <conn input="P1.list" output="null3"/>
                        <conn input="line7.point1" output="P1"/>
                        <conn input="angle3.point1" output="P1"/>
                        <conn input="line_angle8.position" output="P1"/>
                        <conn input="line_angle7.position" output="P1"/>
                        <conn input="line_angle6.position" output="P1"/>
                        <conn input="line6.point2" output="P1"/>
                        <conn input="P2.list" output="null3"/>
                        <conn input="line7.point2" output="P2"/>
                        <conn input="angle4.point2" output="P2"/>
                        <conn input="multiply3.value2" output="curviness"/>
                        <conn input="multiply4.value1" output="curviness"/>
                    </node>
                    <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                        <port name="size" type="int" value="3"/>
                    </node>
                    <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <conn input="find_controls.shape" output="slice7"/>
                </node>
                <node comment="add a pair of control points for each point in path" name="add_pairs2" position="101.00,-7.00" prototype="core.network" renderedChild="find_controls">
                    <node name="find_controls" position="86.00,-1.00" prototype="core.network" renderedChild="combine7">
                        <node comment="Algorithm by Bernhard R. Fischer.  Adapted for NodeBox by John Cartan." name="Credits" outputType="credits" position="100.00,-13.00" prototype="corevector.null"/>
                        <node name="P0" position="88.00,-8.00" prototype="list.slice">
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P1" position="96.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="1"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="P2" position="102.00,-8.00" prototype="list.slice">
                            <port name="start_index" type="int" value="2"/>
                            <port name="size" type="int" value="1"/>
                        </node>
                        <node name="add2" position="89.00,7.00" prototype="math.add">
                            <port name="value2" type="float" value="180.0"/>
                        </node>
                        <node name="angle3" position="92.00,-2.00" prototype="math.angle"/>
                        <node comment="angle of isosceles triangle equals angle of tangent" name="angle4" position="97.00,8.00" prototype="math.angle"/>
                        <node name="combine7" position="94.00,17.00" prototype="list.combine"/>
                        <node name="curviness" position="84.00,1.00" prototype="math.number">
                            <port name="value" type="float" value="0.25"/>
                        </node>
                        <node name="line6" position="87.00,-3.00" prototype="corevector.line"/>
                        <node name="line7" position="102.00,-3.00" prototype="corevector.line"/>
                        <node comment="move backwards along tangent, distance increases with curviness" name="line_angle6" position="87.00,10.00" prototype="corevector.line_angle"/>
                        <node comment="move forward along tangent, distance increases with curviness" name="line_angle7" position="101.00,10.00" prototype="corevector.line_angle"/>
                        <node name="line_angle8" position="95.00,1.00" prototype="corevector.line_angle"/>
                        <node comment="distance from P0 to P1" name="lookup10" position="87.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node comment="distance d from P1 to P2" name="lookup9" position="102.00,-2.00" prototype="data.lookup">
                            <port name="key" type="string" value="length"/>
                        </node>
                        <node name="multiply3" position="104.00,7.00" prototype="math.multiply"/>
                        <node name="multiply4" position="84.00,7.00" prototype="math.multiply"/>
                        <node name="null3" position="96.00,-13.00" prototype="corevector.null"/>
                        <node name="point11" position="95.00,2.00" prototype="corevector.point"/>
                        <node name="point12" position="102.00,12.00" prototype="corevector.point"/>
                        <node name="point13" position="88.00,12.00" prototype="corevector.point"/>
                        <node comment="second control point for segment 1" name="second6" position="88.00,13.00" prototype="list.second"/>
                        <node comment="first control point for segment 2" name="second7" position="102.00,13.00" prototype="list.second"/>
                        <node comment="Third corner of isosceles triange: distance d back from P1 towards P0" name="second8" position="95.00,3.00" prototype="list.second"/>
                        <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
                        <port childReference="curviness.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                        <conn input="lookup9.list" output="line7"/>
                        <conn input="line_angle8.angle" output="angle3"/>
                        <conn input="line_angle8.distance" output="lookup9"/>
                        <conn input="point11.value" output="line_angle8"/>
                        <conn input="second8.list" output="point11"/>
                        <conn input="angle4.point1" output="second8"/>
                        <conn input="line_angle7.angle" output="angle4"/>
                        <conn input="point12.value" output="line_angle7"/>
                        <conn input="multiply3.value1" output="lookup9"/>
                        <conn input="line_angle7.distance" output="multiply3"/>
                        <conn input="second7.list" output="point12"/>
                        <conn input="add2.value1" output="angle4"/>
                        <conn input="line_angle6.angle" output="add2"/>
                        <conn input="second6.list" output="point13"/>
                        <conn input="point13.value" output="line_angle6"/>
                        <conn input="lookup10.list" output="line6"/>
                        <conn input="multiply4.value2" output="lookup10"/>
                        <conn input="line_angle6.distance" output="multiply4"/>
                        <conn input="combine7.list3" output="second6"/>
                        <conn input="combine7.list4" output="second7"/>
                        <conn input="P0.list" output="null3"/>
                        <conn input="angle3.point2" output="P0"/>
                        <conn input="line6.point1" output="P0"/>
                        <conn input="P1.list" output="null3"/>
                        <conn input="line7.point1" output="P1"/>
                        <conn input="angle3.point1" output="P1"/>
                        <conn input="line_angle8.position" output="P1"/>
                        <conn input="line_angle7.position" output="P1"/>
                        <conn input="line_angle6.position" output="P1"/>
                        <conn input="line6.point2" output="P1"/>
                        <conn input="P2.list" output="null3"/>
                        <conn input="line7.point2" output="P2"/>
                        <conn input="angle4.point2" output="P2"/>
                        <conn input="multiply3.value2" output="curviness"/>
                        <conn input="multiply4.value1" output="curviness"/>
                    </node>
                    <node name="slice7" position="87.00,-4.00" prototype="list.slice">
                        <port name="size" type="int" value="3"/>
                    </node>
                    <port childReference="find_controls.value" description="" label="" name="value" range="value" type="float" value="0.25" widget="float"/>
                    <port childReference="slice7.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice7.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <conn input="find_controls.shape" output="slice7"/>
                </node>
                <node name="closed" position="94.00,6.00" prototype="math.boolean">
                    <port name="value" type="boolean" value="true"/>
                </node>
                <node name="combine1" position="100.00,-14.00" prototype="list.combine"/>
                <node name="combine7" position="82.00,3.00" prototype="list.combine"/>
                <node name="connect2" position="100.00,5.00" prototype="corevector.connect"/>
                <node name="count2" position="87.00,-12.00" prototype="list.count"/>
                <node name="count3" position="105.00,-12.00" prototype="list.count"/>
                <node name="divide1" position="84.00,-24.00" prototype="math.divide">
                    <port name="value1" type="float" value="30.0"/>
                    <port name="value2" type="float" value="100.0"/>
                </node>
                <node name="first1" position="73.00,-3.00" prototype="list.first"/>
                <node name="first2" position="79.00,-3.00" prototype="list.first"/>
                <node name="last1" position="88.00,-3.00" prototype="list.last"/>
                <node name="last2" position="94.00,-3.00" prototype="list.last"/>
                <node category="geometry" comment="starting point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve5" outputType="geometry" position="79.00,0.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node category="geometry" comment="ending point of open path" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve7" outputType="geometry" position="88.00,0.00">
                    <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                    <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                    <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                    <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                </node>
                <node name="middle_curves" position="84.00,0.00" prototype="core.network" renderedChild="make_curve6">
                    <node name="add1" position="86.00,3.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                    <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                        <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                        <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                        <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                        <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                    </node>
                    <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                        <port name="value2" type="float" value="2.0"/>
                    </node>
                    <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                    <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                    <node name="slice1" position="92.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice2" position="95.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice3" position="82.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice4" position="85.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                    <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                    <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="multiply1.value1" output="number1"/>
                    <conn input="add1.value1" output="number1"/>
                    <conn input="slice1.list" output="controls"/>
                    <conn input="slice2.list" output="controls"/>
                    <conn input="slice3.start_index" output="number1"/>
                    <conn input="slice4.start_index" output="add1"/>
                    <conn input="slice3.list" output="points"/>
                    <conn input="slice4.list" output="points"/>
                    <conn input="make_curve6.pt1" output="slice3"/>
                    <conn input="make_curve6.pt2" output="slice4"/>
                    <conn input="make_curve6.c1" output="slice1"/>
                    <conn input="make_curve6.c2" output="slice2"/>
                    <conn input="subtract1.value1" output="multiply1"/>
                    <conn input="slice1.start_index" output="subtract1"/>
                    <conn input="slice2.start_index" output="multiply1"/>
                </node>
                <node name="middle_curves1" position="100.00,3.00" prototype="core.network" renderedChild="make_curve6">
                    <node name="add1" position="86.00,3.00" prototype="math.add">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <node name="controls" position="92.00,-2.00" prototype="corevector.null"/>
                    <node category="geometry" description="Creates a curve path using 2 control points" function="make_curve/makecurve" name="make_curve6" outputType="geometry" position="87.00,9.00">
                        <port description="" label="" name="pt1" range="value" type="point" value="62.50,190.10" widget="point"/>
                        <port description="" label="" name="pt2" range="value" type="point" value="-22.70,219.00" widget="point"/>
                        <port description="" label="" name="c1" range="value" type="point" value="-62.80,49.10" widget="point"/>
                        <port description="" label="" name="c2" range="value" type="point" value="322.30,144.00" widget="point"/>
                    </node>
                    <node name="multiply1" position="88.00,0.00" prototype="math.multiply">
                        <port name="value2" type="float" value="2.0"/>
                    </node>
                    <node name="number1" position="87.00,-2.00" prototype="math.number"/>
                    <node name="points" position="82.00,-2.00" prototype="corevector.null"/>
                    <node name="slice1" position="92.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice2" position="95.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice3" position="82.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="slice4" position="85.00,5.00" prototype="list.slice">
                        <port name="size" type="int" value="1"/>
                    </node>
                    <node name="subtract1" position="90.00,3.00" prototype="math.subtract">
                        <port name="value2" type="float" value="1.0"/>
                    </node>
                    <port childReference="points.shape" description="The input shape." label="" name="points" range="list" type="geometry" widget="none"/>
                    <port childReference="controls.shape" description="The input shape." label="" name="controls" range="list" type="geometry" widget="none"/>
                    <port childReference="number1.value" description="" label="" name="index" range="value" type="float" value="0.0" widget="float"/>
                    <conn input="multiply1.value1" output="number1"/>
                    <conn input="add1.value1" output="number1"/>
                    <conn input="slice1.list" output="controls"/>
                    <conn input="slice2.list" output="controls"/>
                    <conn input="slice3.start_index" output="number1"/>
                    <conn input="slice4.start_index" output="add1"/>
                    <conn input="slice3.list" output="points"/>
                    <conn input="slice4.list" output="points"/>
                    <conn input="make_curve6.pt1" output="slice3"/>
                    <conn input="make_curve6.pt2" output="slice4"/>
                    <conn input="make_curve6.c1" output="slice1"/>
                    <conn input="make_curve6.c2" output="slice2"/>
                    <conn input="subtract1.value1" output="multiply1"/>
                    <conn input="slice1.start_index" output="subtract1"/>
                    <conn input="slice2.start_index" output="multiply1"/>
                </node>
                <node name="null2" position="88.00,-24.00" prototype="corevector.null"/>
                <node name="point1" position="88.00,-26.00" prototype="corevector.point"/>
                <node name="point2" position="100.00,4.00" prototype="corevector.point"/>
                <node name="range2" position="82.00,-9.00" prototype="math.range"/>
                <node name="range3" position="86.00,-6.00" prototype="math.range">
                    <port name="start" type="float" value="1.0"/>
                </node>
                <node name="range4" position="105.00,-7.00" prototype="math.range">
                    <port name="start" type="float" value="1.0"/>
                </node>
                <node name="range5" position="102.00,-9.00" prototype="math.range"/>
                <node name="second6" position="76.00,-3.00" prototype="list.second"/>
                <node name="slice1" position="101.00,-16.00" prototype="list.slice">
                    <port name="size" type="int" value="3"/>
                </node>
                <node name="slice6" position="91.00,-3.00" prototype="list.slice">
                    <port name="start_index" type="int" value="2"/>
                    <port name="size" type="int" value="1"/>
                </node>
                <node name="subtract1" position="87.00,-11.00" prototype="math.subtract">
                    <port name="value2" type="float" value="2.0"/>
                </node>
                <node name="subtract2" position="105.00,-11.00" prototype="math.subtract">
                    <port name="value2" type="float" value="1.0"/>
                </node>
                <node name="switch1" position="93.00,10.00" prototype="list.switch"/>
                <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
                <port childReference="divide1.value1" description="" label="" name="curviness" range="value" type="float" value="30.0" widget="float"/>
                <port childReference="closed.value" description="" label="" name="closed" range="value" type="boolean" value="true" widget="toggle"/>
                <conn input="count2.list" output="null2"/>
                <conn input="subtract1.value1" output="count2"/>
                <conn input="range2.end" output="subtract1"/>
                <conn input="add_pairs.list" output="null2"/>
                <conn input="add_pairs.start_index" output="range2"/>
                <conn input="first1.list" output="null2"/>
                <conn input="second6.list" output="null2"/>
                <conn input="first2.list" output="add_pairs"/>
                <conn input="make_curve5.pt1" output="first1"/>
                <conn input="make_curve5.pt2" output="second6"/>
                <conn input="make_curve5.c1" output="first1"/>
                <conn input="make_curve5.c2" output="first2"/>
                <conn input="last1.list" output="add_pairs"/>
                <conn input="last2.list" output="null2"/>
                <conn input="slice6.list" output="null2"/>
                <conn input="slice6.start_index" output="subtract1"/>
                <conn input="make_curve7.pt1" output="slice6"/>
                <conn input="make_curve7.pt2" output="last2"/>
                <conn input="make_curve7.c2" output="last2"/>
                <conn input="make_curve7.c1" output="last1"/>
                <conn input="combine7.list1" output="make_curve5"/>
                <conn input="combine7.list7" output="make_curve7"/>
                <conn input="range3.end" output="subtract1"/>
                <conn input="middle_curves.controls" output="add_pairs"/>
                <conn input="middle_curves.index" output="range3"/>
                <conn input="middle_curves.points" output="null2"/>
                <conn input="combine7.list4" output="middle_curves"/>
                <conn input="add_pairs.value" output="divide1"/>
                <conn input="combine1.list1" output="null2"/>
                <conn input="slice1.list" output="null2"/>
                <conn input="combine1.list2" output="slice1"/>
                <conn input="subtract2.value1" output="count3"/>
                <conn input="range5.end" output="subtract2"/>
                <conn input="range4.end" output="subtract2"/>
                <conn input="middle_curves1.index" output="range4"/>
                <conn input="middle_curves1.points" output="combine1"/>
                <conn input="count3.list" output="combine1"/>
                <conn input="switch1.index" output="closed"/>
                <conn input="switch1.input1" output="combine7"/>
                <conn input="null2.shape" output="point1"/>
                <conn input="add_pairs2.value" output="divide1"/>
                <conn input="add_pairs2.list" output="combine1"/>
                <conn input="add_pairs2.start_index" output="range5"/>
                <conn input="middle_curves1.controls" output="add_pairs2"/>
                <conn input="connect2.points" output="point2"/>
                <conn input="point2.value" output="middle_curves1"/>
                <conn input="switch1.input2" output="connect2"/>
            </node>
            <node name="margin" position="-16.00,-10.00" prototype="math.number">
                <port name="value" type="float" value="80.0"/>
            </node>
            <node name="multiply1" position="-19.00,-6.00" prototype="math.multiply">
                <port name="value2" type="float" value="1.67"/>
            </node>
            <node name="negate1" position="-19.00,-8.00" prototype="math.negate"/>
            <node name="null3" position="-26.00,-10.00" prototype="corevector.null"/>
            <node comment="returns polygon path offset; negative distance moves inside" name="offset" position="-19.00,-4.00" prototype="core.network" renderedChild="connect1">
                <node name="combine6" position="-52.00,-7.00" prototype="list.combine"/>
                <node name="connect1" position="-53.00,-4.00" prototype="corevector.connect"/>
                <node name="count1" position="-49.00,-9.00" prototype="list.count"/>
                <node name="first2" position="-52.00,-9.00" prototype="list.first"/>
                <node comment="given list of points and index, returns points offset 90 degrees from midpoint of each pair" name="offset_points" position="-53.00,-5.00" prototype="core.network" renderedChild="point_on_path2">
                    <node name="add1" position="-48.00,0.00" prototype="math.add">
                        <port name="value2" type="float" value="90.0"/>
                    </node>
                    <node name="angle1" position="-48.00,-1.00" prototype="math.angle"/>
                    <node name="first2" position="-51.00,-4.00" prototype="list.first"/>
                    <node name="line1" position="-51.00,-1.00" prototype="corevector.line"/>
                    <node name="line_angle1" position="-53.00,3.00" prototype="corevector.line_angle">
                        <port name="distance" type="float" value="-18.0"/>
                    </node>
                    <node name="point_on_path1" position="-51.00,0.00" prototype="corevector.point_on_path">
                        <port name="t" type="float" value="50.0"/>
                    </node>
                    <node name="point_on_path2" position="-53.00,4.00" prototype="corevector.point_on_path">
                        <port name="t" type="float" value="99.0"/>
                    </node>
                    <node name="second2" position="-48.00,-4.00" prototype="list.second"/>
                    <node name="slice8" position="-51.00,-6.00" prototype="list.slice">
                        <port name="size" type="int" value="2"/>
                    </node>
                    <port childReference="slice8.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice8.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <port childReference="line_angle1.distance" description="The distance between starting and ending point." label="" name="distance" range="value" type="float" value="-18.0" widget="float"/>
                    <conn input="first2.list" output="slice8"/>
                    <conn input="second2.list" output="slice8"/>
                    <conn input="angle1.point1" output="first2"/>
                    <conn input="angle1.point2" output="second2"/>
                    <conn input="line1.point1" output="first2"/>
                    <conn input="line1.point2" output="second2"/>
                    <conn input="point_on_path1.shape" output="line1"/>
                    <conn input="line_angle1.position" output="point_on_path1"/>
                    <conn input="point_on_path2.shape" output="line_angle1"/>
                    <conn input="add1.value1" output="angle1"/>
                    <conn input="line_angle1.angle" output="add1"/>
                </node>
                <node name="point1" position="-53.00,-11.00" prototype="corevector.point"/>
                <node name="range2" position="-49.00,-7.00" prototype="math.range"/>
                <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
                <port childReference="offset_points.distance" description="The distance between starting and ending point." label="" name="distance" range="value" type="float" value="-18.0" widget="float"/>
                <conn input="combine6.list1" output="point1"/>
                <conn input="count1.list" output="point1"/>
                <conn input="range2.end" output="count1"/>
                <conn input="first2.list" output="point1"/>
                <conn input="combine6.list2" output="first2"/>
                <conn input="offset_points.list" output="combine6"/>
                <conn input="offset_points.start_index" output="range2"/>
                <conn input="connect1.points" output="offset_points"/>
            </node>
            <node comment="returns polygon path offset; negative distance moves inside" name="offset1" position="-22.00,-4.00" prototype="core.network" renderedChild="connect1">
                <node name="combine6" position="-52.00,-7.00" prototype="list.combine"/>
                <node name="connect1" position="-53.00,-4.00" prototype="corevector.connect"/>
                <node name="count1" position="-49.00,-9.00" prototype="list.count"/>
                <node name="first2" position="-52.00,-9.00" prototype="list.first"/>
                <node comment="given list of points and index, returns points offset 90 degrees from midpoint of each pair" name="offset_points" position="-53.00,-5.00" prototype="core.network" renderedChild="point_on_path2">
                    <node name="add1" position="-48.00,0.00" prototype="math.add">
                        <port name="value2" type="float" value="90.0"/>
                    </node>
                    <node name="angle1" position="-48.00,-1.00" prototype="math.angle"/>
                    <node name="first2" position="-51.00,-4.00" prototype="list.first"/>
                    <node name="line1" position="-51.00,-1.00" prototype="corevector.line"/>
                    <node name="line_angle1" position="-53.00,3.00" prototype="corevector.line_angle">
                        <port name="distance" type="float" value="-18.0"/>
                    </node>
                    <node name="point_on_path1" position="-51.00,0.00" prototype="corevector.point_on_path">
                        <port name="t" type="float" value="50.0"/>
                    </node>
                    <node name="point_on_path2" position="-53.00,4.00" prototype="corevector.point_on_path">
                        <port name="t" type="float" value="99.0"/>
                    </node>
                    <node name="second2" position="-48.00,-4.00" prototype="list.second"/>
                    <node name="slice8" position="-51.00,-6.00" prototype="list.slice">
                        <port name="size" type="int" value="2"/>
                    </node>
                    <port childReference="slice8.list" description="The input list." label="" name="list" range="list" type="list" widget="none"/>
                    <port childReference="slice8.start_index" description="The starting index in the list." label="" min="0.0" name="start_index" range="value" type="int" value="0" widget="int"/>
                    <port childReference="line_angle1.distance" description="The distance between starting and ending point." label="" name="distance" range="value" type="float" value="-18.0" widget="float"/>
                    <conn input="first2.list" output="slice8"/>
                    <conn input="second2.list" output="slice8"/>
                    <conn input="angle1.point1" output="first2"/>
                    <conn input="angle1.point2" output="second2"/>
                    <conn input="line1.point1" output="first2"/>
                    <conn input="line1.point2" output="second2"/>
                    <conn input="point_on_path1.shape" output="line1"/>
                    <conn input="line_angle1.position" output="point_on_path1"/>
                    <conn input="point_on_path2.shape" output="line_angle1"/>
                    <conn input="add1.value1" output="angle1"/>
                    <conn input="line_angle1.angle" output="add1"/>
                </node>
                <node name="point1" position="-53.00,-11.00" prototype="corevector.point"/>
                <node name="range2" position="-49.00,-7.00" prototype="math.range"/>
                <port childReference="point1.value" description="The input point." label="" name="path" range="list" type="point" value="0.00,0.00" widget="point"/>
                <port childReference="offset_points.distance" description="The distance between starting and ending point." label="" name="distance" range="value" type="float" value="-18.0" widget="float"/>
                <conn input="combine6.list1" output="point1"/>
                <conn input="count1.list" output="point1"/>
                <conn input="range2.end" output="count1"/>
                <conn input="first2.list" output="point1"/>
                <conn input="combine6.list2" output="first2"/>
                <conn input="offset_points.list" output="combine6"/>
                <conn input="offset_points.start_index" output="range2"/>
                <conn input="connect1.points" output="offset_points"/>
            </node>
            <node name="resample2" position="-22.00,-8.00" prototype="corevector.resample">
                <port name="method" type="string" value="amount"/>
                <port name="length" type="float" value="18.0"/>
                <port name="points" type="int" value="30"/>
            </node>
            <node name="resolution" position="-22.00,-10.00" prototype="math.number">
                <port name="value" type="float" value="45.0"/>
            </node>
            <node name="thickness" position="-19.00,-10.00" prototype="math.number">
                <port name="value" type="float" value="13.0"/>
            </node>
            <port childReference="null3.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
            <port childReference="thickness.value" description="" label="" name="thickness" range="value" type="float" value="13.0" widget="float"/>
            <port childReference="resolution.value" description="" label="" name="resolution" range="value" type="float" value="45.0" widget="float"/>
            <port childReference="curviness.value" description="" label="" name="curviness" range="value" type="float" value="30.0" widget="float"/>
            <port childReference="margin.value" description="" label="" name="margin" range="value" type="float" value="80.0" widget="float"/>
            <conn input="combine5.list1" output="colorize5"/>
            <conn input="combine5.list2" output="colorize7"/>
            <conn input="clean1.shape" output="fit_curve2"/>
            <conn input="fit_curve2.path" output="offset"/>
            <conn input="offset.path" output="resample2"/>
            <conn input="resample2.shape" output="null3"/>
            <conn input="negate1.value" output="thickness"/>
            <conn input="multiply1.value1" output="negate1"/>
            <conn input="offset.distance" output="multiply1"/>
            <conn input="resample2.points" output="resolution"/>
            <conn input="clean2.shape" output="fit_curve3"/>
            <conn input="fit_curve3.path" output="offset1"/>
            <conn input="offset1.path" output="resample2"/>
            <conn input="offset1.distance" output="negate1"/>
            <conn input="fit_curve3.curviness" output="curviness"/>
            <conn input="fit_curve2.curviness" output="curviness"/>
            <conn input="compound1.shape1" output="null3"/>
            <conn input="compound1.shape2" output="clean2"/>
            <conn input="colorize5.shape" output="compound1"/>
            <conn input="colorize7.shape" output="clean1"/>
            <conn input="divide1.value1" output="margin"/>
            <conn input="add1.value1" output="divide1"/>
            <conn input="multiply1.value2" output="add1"/>
        </node>
        <node name="slice1" position="12.00,14.00" prototype="list.slice">
            <port name="size" type="int" value="69"/>
        </node>
        <node name="slice2" position="56.00,10.00" prototype="list.slice">
            <port name="size" type="int" value="69"/>
        </node>
        <node name="subtract1" position="25.00,11.00" prototype="math.subtract">
            <port name="value2" type="float" value="1.0"/>
        </node>
        <node name="switch1" position="43.00,12.00" prototype="list.switch"/>
        <node name="textpath1" position="9.00,15.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Draw a line around these dots"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
        </node>
        <node name="textpath2" position="25.00,15.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Draw a triangle with rounded corners"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
            <port name="width" type="float" value="394.0"/>
        </node>
        <node name="textpath3" position="44.00,14.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Which shape is larger?"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
        </node>
        <node name="textpath4" position="37.00,10.00" prototype="corevector.textpath">
            <port name="position" type="point" value="-116.00,90.00"/>
        </node>
        <node name="textpath5" position="40.00,10.00" prototype="corevector.textpath">
            <port name="position" type="point" value="135.00,90.00"/>
        </node>
        <node name="textpath6" position="56.00,15.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Trace the inside of this shape"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
            <port name="width" type="float" value="722.0"/>
        </node>
        <node name="textpath7" position="72.00,15.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Magnify the center of the grid"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
            <port name="width" type="float" value="686.0"/>
        </node>
        <node name="textpath8" position="89.00,15.00" prototype="corevector.textpath">
            <port name="text" type="string" value="Find the intersections"/>
            <port name="font_name" type="string" value="GillSans"/>
            <port name="font_size" type="float" value="42.0"/>
            <port name="position" type="point" value="0.00,-225.00"/>
            <port name="width" type="float" value="394.0"/>
        </node>
        <node name="translate1" position="8.00,19.00" prototype="corevector.translate">
            <port name="translate" type="point" value="-650.00,-650.00"/>
        </node>
        <node name="translate2" position="22.00,19.00" prototype="corevector.translate">
            <port name="translate" type="point" value="0.00,-650.00"/>
        </node>
        <node name="translate3" position="33.00,19.00" prototype="corevector.translate">
            <port name="translate" type="point" value="650.00,-650.00"/>
        </node>
        <node name="translate4" position="53.00,19.00" prototype="corevector.translate">
            <port name="translate" type="point" value="-650.00,0.00"/>
        </node>
        <node name="translate5" position="66.00,19.00" prototype="corevector.translate">
            <port name="translate" type="point" value="650.00,0.00"/>
        </node>
        <node name="translate6" position="82.00,19.00" prototype="corevector.translate"/>
        <node category="geometry" description="Given list of points return subset comprising convex hull" function="convex_hull/convex_hull" name="wrap" outputRange="list" position="12.00,3.00">
            <port description="" label="" name="mypoints" range="list" type="point" value="0.00,0.00" widget="point"/>
        </node>
        <node category="geometry" description="Given list of points return subset comprising convex hull" function="convex_hull/convex_hull" name="wrap1" outputRange="list" position="33.00,1.00">
            <port description="" label="" name="mypoints" range="list" type="point" value="0.00,0.00" widget="point"/>
        </node>
        <node category="geometry" description="Given list of points return subset comprising convex hull" function="convex_hull/convex_hull" name="wrap2" outputRange="list" position="36.00,1.00">
            <port description="" label="" name="mypoints" range="list" type="point" value="0.00,0.00" widget="point"/>
        </node>
        <conn input="scatter1.shape" output="rect2"/>
        <conn input="ellipse1.position" output="scatter1"/>
        <conn input="wrap.mypoints" output="scatter1"/>
        <conn input="connect2.points" output="wrap"/>
        <conn input="scale1.shape" output="connect2"/>
        <conn input="fit_curve2.path" output="scale1"/>
        <conn input="combine3.list7" output="colorize1"/>
        <conn input="combine3.list3" output="colorize2"/>
        <conn input="colorize2.shape" output="textpath1"/>
        <conn input="point1.value" output="resample1"/>
        <conn input="connect1.points" output="slice1"/>
        <conn input="slice1.size" output="frame1"/>
        <conn input="resample1.shape" output="fit_curve2"/>
        <conn input="colorize1.shape" output="connect1"/>
        <conn input="combine3.list2" output="ellipse1"/>
        <conn input="colorize3.shape" output="rect1"/>
        <conn input="combine3.list1" output="colorize3"/>
        <conn input="translate1.shape" output="combine3"/>
        <conn input="colorize4.shape" output="textpath2"/>
        <conn input="colorize5.shape" output="rect3"/>
        <conn input="combine4.list1" output="colorize5"/>
        <conn input="translate2.shape" output="combine4"/>
        <conn input="colorize16.shape" output="fit_curve4"/>
        <conn input="combine4.list7" output="colorize4"/>
        <conn input="combine4.list2" output="colorize16"/>
        <conn input="combine1.list1" output="translate1"/>
        <conn input="combine1.list2" output="translate2"/>
        <conn input="scatter2.shape" output="rect5"/>
        <conn input="wrap1.mypoints" output="scatter2"/>
        <conn input="connect3.points" output="wrap1"/>
        <conn input="colorize7.shape" output="textpath3"/>
        <conn input="colorize8.shape" output="rect4"/>
        <conn input="combine5.list1" output="colorize8"/>
        <conn input="translate3.shape" output="combine5"/>
        <conn input="fit_curve3.path" output="connect3"/>
        <conn input="colorize6.shape" output="fit_curve3"/>
        <conn input="combine5.list2" output="colorize6"/>
        <conn input="combine5.list7" output="colorize7"/>
        <conn input="scatter3.shape" output="rect6"/>
        <conn input="wrap2.mypoints" output="scatter3"/>
        <conn input="connect4.points" output="wrap2"/>
        <conn input="fit_curve5.path" output="connect4"/>
        <conn input="colorize9.shape" output="fit_curve5"/>
        <conn input="area.shape" output="colorize6"/>
        <conn input="area1.shape" output="colorize9"/>
        <conn input="combine5.list3" output="colorize9"/>
        <conn input="combine5.list4" output="textpath4"/>
        <conn input="combine5.list5" output="textpath5"/>
        <conn input="countUp.value" output="area"/>
        <conn input="textpath4.text" output="countUp"/>
        <conn input="countUp.index" output="frame3"/>
        <conn input="countUp1.index" output="frame3"/>
        <conn input="countUp1.value" output="area1"/>
        <conn input="textpath5.text" output="countUp1"/>
        <conn input="scale2.shape" output="import_svg1"/>
        <conn input="compare1.value1" output="frame3"/>
        <conn input="switch1.index" output="compare1"/>
        <conn input="switch1.input2" output="scale2"/>
        <conn input="combine5.list6" output="switch1"/>
        <conn input="combine1.list3" output="translate3"/>
        <conn input="scale3.shape" output="import_svg2"/>
        <conn input="clean.shape" output="scale3"/>
        <conn input="seperate.shape" output="clean"/>
        <conn input="colorize11.shape" output="textpath6"/>
        <conn input="colorize10.shape" output="rect7"/>
        <conn input="combine6.list1" output="colorize10"/>
        <conn input="translate4.shape" output="combine6"/>
        <conn input="combine6.list7" output="colorize11"/>
        <conn input="point2.value" output="resample2"/>
        <conn input="connect5.points" output="slice2"/>
        <conn input="slice2.size" output="frame5"/>
        <conn input="colorize12.shape" output="connect5"/>
        <conn input="resample2.shape" output="seperate"/>
        <conn input="combine6.list3" output="colorize12"/>
        <conn input="colorize13.shape" output="clean"/>
        <conn input="combine6.list2" output="colorize13"/>
        <conn input="combine1.list4" output="translate4"/>
        <conn input="limit2.value" output="divide1"/>
        <conn input="fit_curve4.curviness" output="limit2"/>
        <conn input="fit_curve4.path" output="polygon1"/>
        <conn input="subtract1.value1" output="frame2"/>
        <conn input="divide1.value1" output="subtract1"/>
        <conn input="accordion1.path" output="line1"/>
        <conn input="accordion2.path" output="line2"/>
        <conn input="line_angle1.position" output="accordion1"/>
        <conn input="line_angle2.position" output="accordion2"/>
        <conn input="combine2.list1" output="line_angle1"/>
        <conn input="combine2.list7" output="line_angle2"/>
        <conn input="colorize15.shape" output="textpath7"/>
        <conn input="colorize14.shape" output="rect8"/>
        <conn input="combine7.list1" output="colorize14"/>
        <conn input="translate5.shape" output="combine7"/>
        <conn input="combine7.list7" output="colorize15"/>
        <conn input="limit3.value" output="frame4"/>
        <conn input="accordion1.distance" output="limit3"/>
        <conn input="accordion2.distance" output="limit3"/>
        <conn input="colorize17.shape" output="combine2"/>
        <conn input="combine7.list3" output="colorize17"/>
        <conn input="colorize18.shape" output="rect9"/>
        <conn input="combine7.list4" output="colorize18"/>
        <conn input="convert_range1.value" output="limit3"/>
        <conn input="rect9.width" output="convert_range1"/>
        <conn input="rect9.height" output="convert_range1"/>
        <conn input="combine1.list5" output="translate5"/>
        <conn input="colorize21.shape" output="textpath8"/>
        <conn input="colorize20.shape" output="rect10"/>
        <conn input="combine8.list1" output="colorize20"/>
        <conn input="translate6.shape" output="combine8"/>
        <conn input="combine8.list7" output="colorize21"/>
        <conn input="combine9.list1" output="ring"/>
        <conn input="combine8.list2" output="combine9"/>
        <conn input="combine9.list3" output="ring1"/>
        <conn input="combine9.list7" output="ring2"/>
        <conn input="fragment2.boundary" output="rect11"/>
        <conn input="group1.shapes" output="combine9"/>
        <conn input="fragment2.pattern" output="group1"/>
        <conn input="colorize19.shape" output="fragment2"/>
        <conn input="piece.list" output="colorize19"/>
        <conn input="piece1.list" output="colorize19"/>
        <conn input="piece2.list" output="colorize19"/>
        <conn input="piece3.list" output="colorize19"/>
        <conn input="reveal.input2" output="piece"/>
        <conn input="reveal.frame" output="frame6"/>
        <conn input="combine8.list3" output="reveal"/>
        <conn input="reveal1.frame" output="frame6"/>
        <conn input="reveal1.input2" output="piece2"/>
        <conn input="combine8.list4" output="reveal1"/>
        <conn input="reveal2.frame" output="frame6"/>
        <conn input="reveal2.input2" output="piece3"/>
        <conn input="combine8.list5" output="reveal2"/>
        <conn input="reveal3.frame" output="frame6"/>
        <conn input="reveal3.input2" output="piece1"/>
        <conn input="combine8.list6" output="reveal3"/>
        <conn input="combine1.list6" output="translate6"/>
        <conn input="first1.list" output="point1"/>
        <conn input="combine10.list1" output="point1"/>
        <conn input="combine10.list2" output="first1"/>
        <conn input="slice1.list" output="combine10"/>
        <conn input="first2.list" output="point2"/>
        <conn input="combine11.list1" output="point2"/>
        <conn input="combine11.list2" output="first2"/>
        <conn input="slice2.list" output="combine11"/>
    </node>
</ndbx>
